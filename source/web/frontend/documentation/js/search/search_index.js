var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.233,1,0.966]],["body/components/AppComponent.html",[0,0.447,1,1.804,2,1.594,3,0.445,4,0.377,5,1.949,6,1.949,7,1.949,8,1.949,9,0.312,10,3.257,11,0.674,12,3.448,13,4.877,14,1.949,15,1.745,16,1.417,17,2.162,18,1.44,19,5.288,20,1.44,21,4.877,22,0.445,23,0.831,24,2.115,25,0.517,26,0.04,27,0.76,28,1.43,29,1.582,30,4.877,31,4.877,32,0.949,33,3.956,34,0.445,35,0.445,36,0.445,37,0.078,38,1.582,39,2.403,40,2.162,41,1.949,42,1.804,43,1.949,44,1.594,45,1.949,46,1.054,47,1.949,48,1.168,49,1.949,50,1.054,51,1.949,52,0.949,53,1.949,54,1.054,55,1.293,56,1.949,57,1.949,58,0.312,59,0.384,60,0.25]],["title/modules/AppModule.html",[61,1.833,62,1.833]],["body/modules/AppModule.html",[0,0.39,1,1.898,3,0.335,4,0.284,9,0.235,16,0.714,26,0.04,34,0.69,35,0.335,36,0.335,37,0.059,38,1.19,46,1.458,48,1.616,50,1.425,52,1.312,54,1.458,55,0.973,58,0.235,59,0.32,60,0.188,61,1.845,62,3.756,63,1.639,64,1.845,65,3.797,66,2.44,67,3.797,68,1.639,69,2.451,70,2.451,71,2.451,72,2.451,73,2.451,74,2.943,75,1.15,76,1.747,77,3.339,78,2.451,79,1.319,80,2.977,81,3.339,82,4.055,83,3.339,84,1.845,85,3.339,86,2.867,87,1.325,88,2.451,89,2.539,90,0.389,91,4.055,92,1.467,93,1.319,94,4.612,95,0.973,96,2.977,97,4.055,98,2.977,99,4.055,100,2.977,101,4.055,102,2.977,103,4.055,104,2.977,105,4.612,106,2.977,107,4.055,108,2.977,109,2.977,110,2.451,111,2.451,112,2.451,113,2.451,114,2.451,115,4.055,116,2.977,117,4.055,118,1.467,119,1.639,120,4.055,121,2.977,122,2.514,123,1.639,124,2.514,125,1.845,126,2.514,127,1.639,128,4.055,129,2.977,130,1.467,131,2.867,132,2.104,133,4.055,134,1.639,135,2.104,136,0.973,137,2.852,138,1.622,139,0.879,140,2.977,141,2.977,142,2.977,143,2.451,144,2.451,145,2.977,146,2.977,147,2.977]],["title/classes/AppPage.html",[37,0.058,148,2.09]],["body/classes/AppPage.html",[3,0.497,4,0.421,9,0.348,17,1.957,22,0.497,26,0.04,32,1.25,34,0.497,36,0.497,37,0.087,40,1.957,58,0.348,59,0.411,60,0.279,84,2.738,148,3.685,149,2.176,150,3.636,151,2.084,152,5.729,153,5.729,154,4.417,155,2.084,156,4.417,157,3.636,158,2.568,159,4.417,160,5.213,161,4.417,162,2.738,163,4.417]],["title/modules/AppRoutingModule.html",[61,1.833,74,1.627]],["body/modules/AppRoutingModule.html",[0,0.452,3,0.464,4,0.392,9,0.325,26,0.04,34,0.664,35,0.464,36,0.464,37,0.081,46,1.332,48,1.476,50,1.332,52,1.199,54,1.332,55,1.346,58,0.325,59,0.394,60,0.26,63,2.267,68,2.267,74,2.752,81,3.391,85,4.116,88,4.116,89,2.963,90,0.539,95,0.988,110,3.391,111,3.391,112,3.391,113,3.391,114,3.391,136,1.346,137,3.157,138,1.647,139,1.216,144,3.391,164,4.119,165,4.119,166,0.988]],["title/injectables/AuthenticationService.html",[75,0.636,167,1.182]],["body/injectables/AuthenticationService.html",[3,0.351,4,0.197,9,0.163,11,0.805,17,0.917,22,0.233,23,0.532,25,0.7,26,0.041,27,1.088,28,0.748,29,0.827,32,1.3,34,0.506,35,0.233,36,0.423,37,0.083,44,1.469,55,1.02,58,0.163,59,0.246,60,0.131,75,0.671,79,1.384,90,0.271,92,1.019,95,1.239,136,1.229,139,1.395,151,1.248,155,2.067,158,2.595,166,1.078,167,1.248,168,1.462,169,1.139,170,1.719,171,1.719,172,1.538,173,1.719,174,1.719,175,1.248,176,2.07,177,1.053,178,3.661,179,2.596,180,2.527,181,2.596,182,2.596,183,2.305,184,2.929,185,3.122,186,0.722,187,1.703,188,2.305,189,0.97,190,3.122,191,0.832,192,0.749,193,1.624,194,1.198,195,2.7,196,1.538,197,0.599,198,1.935,199,1.248,200,1.935,201,1.248,202,2.069,203,1.935,204,2.596,205,2.596,206,2.069,207,2.305,208,1.437,209,2.328,210,1.852,211,2.069,212,1.02,213,1.935,214,1.384,215,1.935,216,1.903,217,2.069,218,1.445,219,2.596,220,2.845,221,2.069,222,1.359,223,2.069,224,1.935,225,2.069,226,0.749,227,1.935,228,1.935,229,2.331,230,2.069,231,1.935,232,1.719,233,2.786,234,1.935,235,1.935,236,2.069,237,1.935,238,2.069,239,1.935,240,1.624,241,2.786,242,1.935,243,1.719,244,2.069,245,1.019,246,1.282,247,1.282,248,1.395,249,1.282,250,1.282,251,0.611,252,0.832,253,1.666,254,1.538,255,1.248,256,1.282,257,1.935,258,1.282,259,0.611,260,1.019,261,1.538,262,1.139,263,0.676,264,0.748,265,0.917,266,1.019,267,0.97,268,0.551,269,1.282,270,2.786,271,2.596,272,1.935,273,1.935,274,2.929,275,1.282,276,1.282,277,1.282,278,1.282,279,1.935,280,1.282,281,1.282,282,1.282,283,0.611,284,1.282,285,1.282,286,2.331,287,1.282,288,1.282,289,1.282,290,1.282,291,1.282,292,1.282,293,1.282,294,1.282,295,1.935,296,1.282,297,1.282,298,0.397,299,1.935,300,1.282,301,1.282,302,1.282]],["title/injectables/DiaryService.html",[76,0.966,167,1.182]],["body/injectables/DiaryService.html",[3,0.336,4,0.285,9,0.235,11,0.884,17,1.324,22,0.336,23,0.693,24,2.259,25,0.532,26,0.04,27,0.574,28,1.08,29,1.195,32,1.284,34,0.558,35,0.336,36,0.336,37,0.098,44,1.695,58,0.235,59,0.32,60,0.188,76,1.328,90,0.391,92,1.472,136,1.328,151,1.626,155,1.983,158,2.444,166,1.244,167,1.626,168,2.112,170,2.238,171,2.238,172,2.003,173,2.238,174,2.238,175,1.626,176,2.544,177,0.781,186,0.887,187,2.46,188,2.946,189,1.07,191,1.083,192,0.975,193,1.875,194,1.382,195,2.544,196,2.003,197,0.781,199,1.626,201,1.626,207,2.73,208,1.37,218,1.083,220,1.645,243,2.238,245,1.472,252,1.568,262,1.645,263,0.976,267,1.051,268,0.796,298,0.574,303,2.46,304,3.347,305,4.065,306,4.065,307,4.065,308,4.065,309,3.347,310,2.003,311,4.065,312,2.988,313,3.347,314,3.318,315,4.065,316,2.698,317,2.988,318,2.14,319,2.52,320,4.065,321,2.988,322,2.874,323,4.065,324,2.299,325,4.96,326,2.988,327,2.988,328,1.472,329,3.075,330,2.988,331,2.988,332,1.852,333,2.988,334,2.988,335,2.988,336,2.988,337,2.988,338,2.988,339,2.988]],["title/interfaces/Gender.html",[248,0.873,255,1.182]],["body/interfaces/Gender.html",[0,0.368,2,0.998,3,0.344,4,0.291,9,0.241,11,0.52,15,0.902,16,0.732,18,0.902,20,0.902,22,0.344,23,0.703,25,0.54,26,0.041,27,1.057,29,2.202,34,0.589,35,0.344,36,0.464,37,0.082,54,0.814,55,1.527,58,0.241,59,0.325,60,0.193,75,0.887,87,0.998,90,0.399,93,1.353,177,0.897,186,0.586,189,0.961,191,0.814,192,0.732,197,0.586,208,1.292,212,0.998,214,1.353,216,1.491,218,1.099,226,0.732,248,1.38,252,1.099,253,1.828,254,2.033,255,2.202,266,2.302,267,1.034,268,0.814,283,1.218,298,0.897,340,1.681,341,2.158,342,2.557,343,4.534,344,1.348,345,2.466,346,1.504,347,1.504,348,2.514,349,4.12,350,2.514,351,1.681,352,2.514,353,2.514,354,0.998,355,2.514,356,2.514,357,2.514,358,1.504,359,2.514,360,3.396,361,3.396,362,1.504,363,1.504,364,1.504,365,1.504,366,1.504,367,1.504,368,2.514,369,1.504,370,1.353,371,1.504,372,3.396,373,1.681,374,2.158,375,2.514,376,1.504,377,2.514,378,2.158,379,2.514,380,2.514,381,2.158,382,1.353,383,3.847,384,1.348,385,2.514,386,1.681,387,2.302,388,2.514,389,2.158,390,2.514,391,3.847,392,3.396,393,1.504,394,2.514,395,1.504,396,1.504,397,1.504,398,1.893,399,3.847,400,2.514,401,1.504,402,1.504,403,1.504,404,2.514,405,2.158,406,2.514,407,3.396,408,2.514,409,2.514,410,3.396,411,2.514,412,2.158,413,1.504,414,2.514,415,2.514]],["title/components/HomeComponent.html",[0,0.233,46,0.788]],["body/components/HomeComponent.html",[0,0.376,1,0.781,2,1.135,3,0.269,4,0.228,5,1.177,6,1.177,7,1.177,8,1.177,9,0.188,11,0.592,12,2.892,14,1.177,15,1.555,16,1.263,18,1.026,20,1.026,22,0.269,23,0.592,24,1.796,25,0.535,26,0.04,27,1.011,28,0.863,32,1.144,34,0.506,35,0.269,36,0.391,37,0.089,38,0.955,39,1.711,40,1.539,41,1.177,42,1.559,43,1.177,44,1.337,45,1.177,46,1.197,47,1.177,48,0.705,49,1.177,50,0.636,51,1.177,52,0.573,53,1.177,54,0.636,55,1.337,56,1.177,57,1.177,60,0.324,86,1.689,87,0.781,90,0.312,95,0.833,131,3.632,132,1.689,138,1.796,139,1.026,151,1.389,155,1.389,162,1.481,166,0.981,177,0.459,186,0.786,189,1.011,191,0.925,192,0.833,193,0.863,194,0.636,197,0.667,222,1.255,251,0.705,252,0.636,259,0.705,260,1.711,263,1.135,267,0.667,268,0.636,298,0.459,324,1.059,328,2.213,342,2.153,344,1.337,351,1.315,354,1.135,382,1.991,384,1.135,416,1.689,417,1.991,418,3.369,419,4.099,420,3.369,421,2.859,422,3.369,423,3.698,424,2.389,425,3.473,426,4.231,427,2.153,428,2.153,429,2.153,430,2.389,431,2.389,432,2.859,433,1.539,434,2.859,435,2.253,436,2.389,437,1.967,438,1.967,439,1.481,440,1.315,441,1.967,442,1.967,443,1.967,444,1.967,445,1.967,446,1.059,447,1.059,448,1.912,449,1.94,450,3.473,451,3.473,452,3.473,453,3.473,454,3.473,455,2.859,456,3.473,457,3.473,458,3.473,459,3.473,460,3.473,461,3.473,462,3.473,463,3.473,464,3.473,465,3.473,466,3.473,467,3.473,468,3.473,469,3.473,470,3.473,471,3.473,472,3.473,473,3.473,474,3.473,475,3.473,476,3.473,477,3.473,478,1.315,479,1.315,480,2.627,481,1.315,482,1.315,483,1.315,484,2.253,485,1.315,486,1.689,487,3.473,488,2.859,489,2.389,490,2.389,491,4.092,492,4.98,493,2.389,494,4.092,495,4.092,496,2.389,497,2.389,498,2.389,499,4.092,500,4.492,501,4.092,502,3.175,503,2.389,504,2.389,505,2.785,506,2.153,507,3.473,508,2.389,509,3.473,510,2.389,511,2.389,512,2.389,513,2.389,514,2.389,515,3.473,516,2.389,517,2.153,518,1.967,519,1.967,520,2.455,521,1.689,522,1.481,523,1.315,524,1.689,525,2.389,526,3.473,527,2.389,528,2.389,529,2.389,530,2.389,531,2.389,532,2.389,533,2.389,534,2.389,535,2.389,536,2.389,537,2.389,538,2.389,539,2.389,540,2.389,541,1.689,542,1.967,543,2.389,544,1.967,545,1.967,546,2.389,547,1.481,548,1.689,549,1.689,550,2.389,551,2.389,552,2.389,553,2.389,554,2.389,555,2.389,556,2.389,557,2.389,558,2.389,559,2.389,560,2.389,561,2.389,562,2.389,563,2.389,564,2.389,565,2.389,566,2.389,567,2.389,568,2.389,569,2.389]],["title/components/LoginComponent.html",[0,0.233,48,0.873]],["body/components/LoginComponent.html",[0,0.38,1,0.804,2,1.488,3,0.277,4,0.234,5,1.212,6,1.212,7,1.212,8,1.212,9,0.194,11,0.776,14,1.212,15,1.567,16,1.273,18,1.047,20,1.047,22,0.277,23,0.604,25,0.544,26,0.04,28,1.503,29,1.418,32,1.243,34,0.513,35,0.277,36,0.277,37,0.07,38,0.983,39,1.747,40,1.572,41,1.212,42,1.488,43,1.212,44,1.578,45,1.212,46,0.655,47,1.212,48,1.345,49,1.212,50,0.655,51,1.212,52,0.59,53,1.212,54,0.655,55,1.359,56,1.212,57,1.212,75,0.979,87,0.804,90,0.322,93,1.09,95,0.851,138,1.418,139,1.74,151,1.418,155,1.418,162,1.524,177,0.681,186,0.799,189,1.019,191,0.945,193,1.745,194,1.108,197,0.681,208,1.273,209,1.747,212,1.159,214,1.572,216,1.503,218,1.213,222,1.282,252,1.108,253,1.844,267,0.927,268,0.655,283,1.228,298,0.927,318,1.418,328,1.747,344,1.359,345,2.554,346,1.212,347,1.212,351,1.952,354,1.159,358,2.05,362,1.747,363,1.747,364,1.747,365,1.747,366,1.747,367,1.747,369,1.747,370,1.572,371,1.747,373,1.952,374,2.507,376,1.212,378,1.738,381,1.738,382,1.09,384,1.159,387,2.243,393,1.747,395,2.05,396,1.212,397,1.212,398,1.524,401,1.212,402,1.212,403,1.212,405,1.738,412,1.738,413,1.212,417,1.09,449,1.818,478,1.354,479,2.507,480,1.952,481,1.354,482,1.952,483,1.952,484,1.354,485,1.354,505,1.524,506,1.524,517,1.524,520,1.738,521,1.738,522,2.199,523,1.952,547,1.524,570,2.025,571,4.16,572,3.547,573,4.16,574,4.16,575,4.16,576,3.547,577,2.507,578,2.025,579,2.823,580,3.547,581,3.547,582,2.459,583,1.952,584,3.547,585,4.828,586,3.547,587,3.547,588,4.16,589,3.547,590,3.547,591,2.459,592,3.547,593,4.16,594,2.459,595,2.459,596,2.459,597,2.459,598,2.459,599,2.459,600,2.459,601,3.547,602,3.547,603,2.459,604,2.459,605,2.459,606,2.459,607,2.459,608,2.459,609,2.507,610,2.92,611,2.92,612,2.92,613,2.507,614,1.738,615,1.738,616,1.738,617,1.738,618,2.025,619,1.524,620,1.524,621,2.025,622,1.524,623,1.524,624,1.524,625,1.738,626,2.507,627,2.025,628,2.025,629,2.025,630,2.025,631,2.025,632,2.025,633,2.025,634,2.025,635,2.025]],["title/components/PostComponent.html",[0,0.233,50,0.788]],["body/components/PostComponent.html",[0,0.366,1,0.731,2,1.082,3,0.252,4,0.213,5,1.102,6,1.102,7,1.102,8,1.102,9,0.261,11,0.564,12,2.34,14,1.102,15,1.526,16,1.239,18,0.977,20,0.977,22,0.373,23,0.564,24,1.741,25,0.676,26,0.041,27,1.031,28,0.808,32,1.266,34,0.444,35,0.252,36,0.373,37,0.065,38,0.895,39,1.631,40,1.467,41,1.102,42,1.59,43,1.102,44,1.287,45,1.102,46,0.596,47,1.102,48,0.661,49,1.102,50,1.16,51,1.102,52,0.536,53,1.102,54,0.596,55,1.287,56,1.102,57,1.102,68,1.232,76,1.645,90,0.293,95,1.044,130,1.102,138,1.323,139,0.977,143,1.842,151,1.323,155,0.895,166,1.044,177,0.43,186,0.756,189,0.992,191,0.882,192,0.794,193,0.808,194,0.596,197,0.636,208,0.794,218,0.596,222,0.808,226,0.536,240,0.808,251,0.661,252,1.05,259,0.661,264,1.196,267,0.636,268,0.596,298,0.636,310,1.102,316,1.941,318,1.945,322,2.34,324,1.929,328,1.631,344,1.287,354,1.082,370,0.991,382,1.929,384,1.082,417,1.467,427,2.052,428,2.052,429,2.052,433,1.467,446,1.467,447,0.991,449,1.679,478,1.232,479,2.771,480,2.558,481,1.232,482,2.397,483,2.397,484,1.232,485,1.232,488,2.725,502,1.581,505,1.387,506,1.387,522,2.052,523,1.822,524,2.34,541,2.34,542,4.538,544,1.842,547,1.387,548,3.653,549,1.581,619,1.387,620,1.387,622,2.052,623,2.88,624,2.442,625,1.581,626,1.581,636,1.581,637,1.822,638,3.243,639,2.725,640,3.31,641,3.31,642,2.237,643,3.31,644,1.822,645,2.725,646,1.822,647,2.237,648,2.725,649,2.725,650,2.237,651,2.237,652,2.237,653,2.237,654,2.237,655,2.237,656,1.232,657,2.052,658,1.842,659,1.842,660,1.842,661,1.842,662,1.842,663,1.842,664,1.232,665,1.842,666,2.725,667,1.842,668,1.842,669,1.842,670,1.822,671,1.842,672,1.822,673,1.842,674,1.822,675,1.842,676,1.842,677,1.842,678,1.842,679,1.842,680,1.842,681,1.232,682,1.842,683,1.842,684,1.842,685,1.842,686,2.725,687,3.31,688,2.237,689,3.31,690,3.939,691,4.647,692,2.237,693,2.237,694,2.237,695,2.237,696,2.237,697,2.237,698,2.237,699,2.237,700,2.237,701,2.237,702,4.354,703,4.354,704,4.865,705,5.169,706,4.354,707,4.354,708,2.725,709,3.939,710,2.237,711,3.939,712,1.842,713,3.31,714,2.237,715,2.237,716,1.842,717,2.237,718,2.237,719,2.237,720,2.237,721,2.237,722,3.31,723,3.31,724,3.31,725,2.237,726,2.237,727,3.939,728,3.31,729,2.237,730,2.237,731,2.237,732,2.237,733,2.237,734,2.237,735,2.237,736,2.237,737,2.237,738,2.237,739,2.237,740,2.237,741,1.842,742,2.237,743,3.243,744,3.939,745,3.939,746,3.939,747,2.237]],["title/components/ProfileComponent.html",[0,0.233,52,0.709]],["body/components/ProfileComponent.html",[0,0.297,1,0.469,2,1.119,3,0.162,4,0.137,5,0.708,6,0.708,7,0.708,8,0.708,9,0.234,11,0.785,14,0.708,15,1.314,16,1.068,18,0.692,20,0.692,22,0.334,23,0.399,24,2.07,25,0.619,26,0.041,27,1.034,28,1.462,29,1.508,32,1.319,34,0.557,35,0.162,36,0.334,37,0.075,38,0.574,39,1.154,40,1.038,41,0.708,42,1.584,43,0.708,44,1.547,45,0.708,46,0.383,47,0.708,48,0.424,49,0.708,50,0.383,51,0.708,52,0.821,53,0.708,54,0.383,55,0.97,56,0.708,57,0.708,66,0.708,75,0.737,76,1.455,87,0.469,90,0.188,93,0.636,95,1.136,118,0.708,119,0.791,122,0.89,123,1.29,124,0.89,125,0.89,126,2.759,127,0.791,130,0.708,134,1.29,136,0.97,137,1.29,138,0.937,139,0.692,151,0.937,155,1.894,166,1.402,175,0.937,177,0.855,180,1.892,183,2.228,186,0.658,189,0.855,193,1.752,194,1.186,196,1.154,197,0.45,199,0.574,201,0.937,208,1.269,212,0.766,218,0.624,222,1.711,226,0.344,240,0.519,251,0.424,259,0.692,263,0.766,264,1.073,265,1.038,267,1.034,283,0.692,298,0.855,304,1.929,310,0.708,313,1.929,314,2.509,316,1.462,318,2.043,319,1.452,324,1.038,328,1.154,329,1.84,332,2.123,344,0.97,345,2.193,346,0.708,347,0.708,354,0.97,358,1.154,362,1.154,363,1.154,364,1.687,365,1.154,366,1.154,367,1.154,369,1.154,370,1.038,371,1.154,373,1.29,376,0.708,384,1.233,386,1.29,387,2.103,393,2.193,395,0.708,396,0.708,397,1.154,401,0.708,402,0.708,403,0.708,413,0.708,417,0.636,433,0.636,435,1.885,440,1.885,446,1.038,447,1.038,448,1.29,449,1.711,478,0.791,479,2.077,480,0.791,481,0.791,482,0.791,483,0.791,484,0.791,485,0.791,517,1.452,518,1.182,519,1.182,523,1.885,524,1.015,541,1.656,545,1.929,577,1.656,579,2.123,583,0.791,609,1.656,613,2.667,614,1.656,615,1.015,616,1.015,617,1.656,619,1.84,620,0.89,622,1.452,624,0.89,637,1.29,644,1.29,646,1.29,656,0.791,664,0.791,670,1.29,672,1.29,674,1.29,681,1.29,716,1.182,748,0.89,749,2.098,750,1.656,751,2.098,752,2.098,753,2.098,754,2.098,755,2.667,756,2.098,757,2.098,758,2.098,759,2.667,760,2.098,761,2.343,762,2.42,763,2.343,764,2.343,765,2.343,766,2.343,767,2.42,768,1.436,769,2.667,770,1.436,771,1.656,772,2.667,773,3.255,774,2.42,775,1.656,776,1.452,777,1.436,778,1.436,779,1.436,780,1.436,781,1.656,782,1.436,783,1.656,784,1.436,785,1.656,786,1.656,787,1.436,788,1.436,789,2.343,790,1.436,791,1.436,792,1.929,793,2.343,794,1.436,795,1.436,796,1.656,797,1.436,798,1.656,799,2.123,800,1.656,801,1.436,802,2.098,803,1.656,804,2.667,805,1.436,806,1.656,807,1.656,808,1.436,809,1.656,810,1.436,811,1.656,812,1.436,813,1.436,814,1.436,815,1.436,816,1.436,817,1.656,818,1.656,819,1.436,820,1.436,821,1.436,822,1.436,823,1.436,824,1.436,825,1.015,826,1.015,827,1.015,828,1.015,829,1.015,830,1.015,831,1.29,832,1.015,833,2.667,834,1.015,835,2.098,836,1.015,837,2.098,838,1.015,839,1.015,840,2.42,841,2.098,842,1.015,843,1.015,844,1.015,845,1.015,846,1.015,847,1.656,848,1.015,849,1.015,850,1.29,851,1.015,852,1.015,853,1.015,854,1.015,855,1.015,856,1.015,857,1.015,858,1.015,859,1.015,860,1.015,861,1.015,862,1.656,863,1.015,864,1.015,865,1.015,866,1.015,867,1.015,868,1.015,869,1.015,870,1.015,871,1.015,872,1.015,873,1.015,874,1.015,875,1.015,876,1.015,877,1.015,878,1.015,879,1.015,880,1.015,881,1.015,882,1.015,883,1.015,884,2.098,885,1.015,886,1.015,887,1.015,888,1.015,889,1.015,890,1.015,891,1.015,892,1.015,893,1.656,894,2.098,895,1.015,896,2.42,897,1.015,898,1.015,899,1.015,900,1.015,901,1.015,902,1.015,903,1.015,904,1.656,905,1.015,906,1.015,907,1.015,908,1.015,909,1.015,910,1.015,911,1.656,912,1.015,913,1.015,914,1.015,915,1.015,916,1.015,917,1.015,918,1.656,919,1.015,920,1.015,921,1.015,922,2.098,923,1.015,924,1.015,925,1.015,926,1.015,927,1.015,928,1.015,929,1.015,930,1.015,931,1.015,932,1.015,933,1.015,934,1.015,935,1.015,936,1.015,937,2.343,938,2.343,939,3.424,940,2.343,941,3.424,942,2.343,943,2.343,944,2.343,945,2.343,946,1.436,947,2.343,948,1.436,949,1.436,950,1.436,951,1.436,952,1.182,953,1.436,954,1.436,955,1.436]],["title/components/RegisterComponent.html",[0,0.233,54,0.788]],["body/components/RegisterComponent.html",[0,0.365,1,0.723,2,1.415,3,0.249,4,0.211,5,1.091,6,1.091,7,1.091,8,1.091,9,0.174,11,0.738,14,1.091,15,1.521,16,1.236,18,0.97,20,0.97,22,0.249,23,0.56,25,0.605,26,0.041,27,0.832,28,1.415,29,2.105,32,1.236,34,0.521,35,0.249,36,0.37,37,0.065,38,0.885,39,1.618,40,1.455,41,1.091,42,1.415,43,1.091,44,1.512,45,1.091,46,0.59,47,1.091,48,0.654,49,1.091,50,0.59,51,1.091,52,0.531,53,1.091,54,1.154,55,1.833,56,1.091,57,1.091,75,0.932,87,0.723,90,0.29,93,0.981,95,0.787,138,1.313,139,1.279,151,1.313,155,1.313,162,1.372,177,0.752,186,0.752,189,0.989,191,0.875,192,0.787,193,1.415,194,1.043,197,0.631,208,1.236,209,1.618,212,1.073,214,1.455,216,1.415,218,1.154,222,1.187,226,0.531,248,0.97,252,1.043,253,1.735,254,1.929,255,2.105,266,2.388,267,0.931,268,0.59,283,0.97,298,0.888,318,1.313,328,1.618,341,1.565,342,1.372,343,4.13,344,1.279,345,2.472,346,1.091,347,1.091,348,1.822,349,4.242,350,1.822,351,1.808,352,2.703,353,3.223,354,1.073,355,3.223,356,3.223,357,3.223,358,1.929,359,3.223,360,3.566,361,3.566,362,1.618,363,1.618,364,1.618,365,1.618,366,1.618,367,1.618,368,2.703,369,1.618,370,1.455,371,1.618,372,3.566,373,1.808,374,2.321,375,1.822,376,1.091,377,1.822,378,1.565,379,1.822,380,1.822,381,1.565,382,0.981,383,3.223,384,1.415,385,2.703,386,1.808,387,2.279,388,2.703,389,2.321,390,2.703,391,3.223,392,3.223,393,1.618,394,2.703,395,1.091,396,1.091,397,1.091,398,1.372,399,3.223,400,1.822,401,1.091,402,1.091,403,1.091,404,1.822,405,1.565,406,1.822,407,2.703,408,1.822,409,1.822,410,2.703,411,1.822,412,1.565,413,1.091,414,1.822,415,1.822,417,0.981,449,1.751,478,1.218,479,2.384,480,1.808,481,1.218,482,1.808,483,1.808,484,1.218,485,1.218,502,1.565,505,1.372,506,1.372,517,1.372,520,1.565,521,1.565,522,2.036,523,1.808,547,2.427,548,2.321,549,2.321,577,2.321,578,1.822,609,2.321,610,2.703,611,2.703,612,2.703,613,2.321,614,1.565,615,1.565,616,1.565,617,1.565,618,1.822,619,1.372,620,1.372,621,1.822,622,1.372,623,1.372,624,1.372,625,1.565,626,2.321,627,1.822,628,1.822,629,1.822,630,1.822,631,1.822,632,1.822,633,1.822,634,1.822,635,1.822,743,1.822,956,3.284,957,2.213,958,2.213,959,2.213,960,2.213,961,2.213,962,2.213,963,2.213,964,2.213,965,3.284,966,2.213,967,2.213,968,2.213,969,2.213,970,2.213]],["title/interfaces/TokenPayload.html",[216,1.068,248,0.873]],["body/interfaces/TokenPayload.html",[3,0.475,4,0.24,9,0.198,11,0.429,17,1.116,22,0.284,23,0.615,25,0.663,26,0.041,27,1.135,34,0.549,35,0.284,36,0.475,37,0.083,58,0.198,59,0.284,60,0.159,75,0.542,79,1.116,90,0.329,92,1.241,95,1.011,136,1.378,139,1.065,158,2.718,166,0.865,167,1.443,169,1.386,170,1.386,171,1.386,172,1.241,173,1.386,174,1.386,175,1.007,176,1.386,177,0.936,178,3.634,179,1.561,180,2.247,181,1.561,182,1.561,183,1.386,184,2.614,186,0.484,188,1.986,189,0.884,191,0.671,192,0.604,194,1.227,195,2.534,196,1.241,197,0.484,198,1.561,199,1.007,200,1.561,201,1.007,203,1.561,204,2.237,205,2.237,207,1.986,208,1.426,209,2.401,210,1.778,212,0.823,213,1.561,214,1.116,215,1.561,216,1.761,218,1.351,219,2.237,220,2.682,222,0.91,224,1.561,226,0.604,227,1.561,228,1.561,229,1.561,231,1.561,232,1.386,233,2.614,234,1.561,235,1.561,237,1.561,239,1.561,240,1.524,241,2.614,242,1.561,243,1.386,245,1.241,246,1.561,247,1.561,248,1.542,249,1.561,250,1.561,251,0.744,252,1.298,253,2.314,254,2.401,255,1.948,256,1.561,257,2.237,258,1.561,259,0.744,260,1.241,261,1.778,262,1.386,263,0.823,264,0.91,265,1.116,266,1.241,267,1.026,268,0.671,269,1.561,270,3.021,271,2.854,272,2.237,273,2.237,274,3.143,275,1.561,276,1.561,277,1.561,278,1.561,279,2.237,280,1.561,281,1.561,282,1.561,283,0.744,284,1.561,285,1.561,286,2.614,287,1.561,288,1.561,289,1.561,290,1.561,291,1.561,292,1.561,293,1.561,294,1.561,295,2.237,296,1.561,297,1.561,298,0.484,299,2.237,300,1.561,301,1.561,302,1.561,340,1.386]],["title/interfaces/TokenResponse.html",[248,0.873,261,1.457]],["body/interfaces/TokenResponse.html",[3,0.413,4,0.246,9,0.203,11,0.439,17,1.143,22,0.29,23,0.625,25,0.559,26,0.041,27,1.105,34,0.554,35,0.29,36,0.481,37,0.084,58,0.203,59,0.289,60,0.163,75,0.555,79,1.143,90,0.337,92,1.27,95,1.024,136,1.396,139,1.083,158,2.732,166,0.88,167,1.467,169,1.419,170,1.419,171,1.419,172,1.27,173,1.419,174,1.419,175,1.031,176,1.419,177,0.944,178,3.696,179,1.598,180,2.265,181,1.598,182,1.598,183,1.419,184,2.648,186,0.495,188,2.02,189,0.893,191,0.687,192,0.618,195,2.561,196,1.27,197,0.495,198,1.598,199,1.031,200,1.598,201,1.031,203,1.598,204,2.274,205,2.274,207,2.02,208,1.425,209,2.422,210,1.808,212,0.842,213,1.598,214,1.143,215,1.598,216,1.682,218,1.362,219,2.274,220,2.707,222,0.932,224,1.598,226,0.618,227,1.598,228,1.598,229,1.598,231,1.598,232,1.419,233,2.648,234,1.598,235,1.598,237,1.598,239,1.598,240,1.682,241,2.884,242,1.598,243,1.419,245,1.27,246,1.598,247,1.598,248,1.552,249,1.598,250,1.598,251,0.761,252,0.978,253,1.893,254,1.808,255,1.467,256,1.598,257,2.274,258,1.598,259,1.083,260,1.808,261,2.104,262,1.419,263,0.842,264,0.932,265,1.143,266,1.27,267,1.032,268,0.687,269,1.598,270,3.048,271,2.884,272,2.274,273,2.274,274,3.168,275,1.598,276,1.598,277,1.598,278,1.598,279,2.274,280,1.598,281,1.598,282,1.598,283,0.761,284,1.598,285,1.598,286,2.648,287,1.598,288,1.598,289,1.598,290,1.598,291,1.598,292,1.598,293,1.598,294,1.598,295,2.274,296,1.598,297,1.598,298,0.495,299,2.274,300,1.598,301,1.598,302,1.598,340,1.419]],["title/interfaces/UserDetails.html",[210,1.457,248,0.873]],["body/interfaces/UserDetails.html",[3,0.4,4,0.235,9,0.194,11,0.419,17,1.091,22,0.277,23,0.605,25,0.707,26,0.041,27,1.139,34,0.544,35,0.277,36,0.469,37,0.082,58,0.194,59,0.28,60,0.155,75,0.529,79,1.091,90,0.322,92,1.213,95,0.998,136,1.36,139,1.048,158,2.705,166,0.851,167,1.419,169,1.355,170,1.355,171,1.355,172,1.213,173,1.355,174,1.355,175,0.984,176,1.355,177,0.927,178,3.623,179,1.526,180,2.23,181,1.526,182,1.526,183,1.355,184,2.58,186,0.473,188,1.954,189,0.875,191,0.656,192,0.59,194,1.341,195,2.508,196,1.213,197,0.473,198,1.526,199,0.984,200,1.526,201,0.984,203,1.526,204,2.2,205,2.2,207,1.954,208,1.418,209,2.479,210,2.051,212,0.804,213,1.526,214,1.091,215,1.526,216,1.646,218,1.341,219,2.2,220,2.659,222,0.89,224,1.526,226,0.59,227,1.526,228,1.526,229,1.526,231,1.526,232,1.355,233,2.58,234,1.526,235,1.526,237,1.526,239,1.526,240,1.504,241,2.58,242,1.526,243,1.355,245,1.213,246,1.526,247,1.526,248,1.531,249,2.2,250,2.2,251,1.345,252,1.287,253,2.23,254,2.379,255,1.931,256,2.824,257,3.119,258,2.824,259,0.727,260,1.213,261,1.749,262,1.355,263,0.804,264,0.89,265,1.091,266,1.213,267,1.019,268,0.656,269,1.526,270,2.994,271,2.824,272,2.2,273,2.2,274,3.119,275,1.526,276,1.526,277,1.526,278,1.526,279,2.2,280,1.526,281,1.526,282,1.526,283,0.727,284,1.526,285,1.526,286,2.58,287,1.526,288,1.526,289,1.526,290,1.526,291,1.526,292,1.526,293,1.526,294,1.526,295,2.2,296,1.526,297,1.526,298,0.473,299,2.2,300,1.526,301,1.526,302,1.526,340,1.355]],["title/coverage.html",[971,3.323]],["body/coverage.html",[0,0.452,1,1.253,9,0.302,10,3.157,25,0.502,26,0.04,37,0.111,46,1.022,48,1.132,50,1.022,52,0.92,54,1.022,58,0.302,59,0.377,60,0.242,75,0.825,76,1.253,148,2.71,150,3.157,167,1.913,169,3.006,210,1.889,216,1.386,226,0.92,248,1.612,255,1.533,261,1.889,303,3.157,341,3.382,389,3.86,416,3.382,439,2.377,449,2.031,486,2.71,570,3.157,623,3.233,636,3.382,657,2.377,708,3.157,712,3.157,748,3.233,831,2.111,850,2.111,971,3.157,972,3.835,973,3.835,974,3.835,975,3.835,976,4.784,977,3.835,978,3.835,979,3.835,980,3.835,981,3.835,982,3.835,983,3.835,984,3.835,985,3.835,986,3.835,987,3.835,988,3.835,989,3.835,990,5.215,991,5.215,992,3.835,993,3.835,994,3.835,995,3.835,996,3.835,997,3.835,998,3.157,999,3.939,1000,5.46,1001,3.157,1002,3.939,1003,3.157,1004,3.835,1005,3.835]],["title/dependencies.html",[64,2.204,1006,2.468]],["body/dependencies.html",[9,0.343,26,0.04,35,0.489,58,0.343,59,0.407,60,0.274,64,2.695,66,2.142,83,4.252,84,3.201,87,1.421,90,0.569,118,2.142,119,2.393,123,2.393,127,2.393,134,2.393,135,3.073,245,2.142,799,2.695,1007,4.348,1008,6.011,1009,4.348,1010,5.164,1011,4.348,1012,4.348,1013,4.348,1014,4.348,1015,4.348,1016,4.348,1017,4.348,1018,4.348,1019,4.348,1020,4.348,1021,4.348,1022,4.348]],["title/classes/formDat.html",[37,0.058,831,1.627]],["body/classes/formDat.html",[0,0.287,2,0.64,3,0.221,4,0.187,9,0.287,11,0.51,15,0.578,16,0.47,18,0.578,20,0.578,22,0.409,23,0.51,24,2.168,25,0.605,26,0.041,27,1.086,32,1.191,34,0.603,35,0.221,36,0.409,37,0.091,42,1.573,44,0.64,52,0.47,58,0.154,59,0.236,60,0.124,66,0.965,75,0.644,76,1.331,87,0.64,90,0.256,93,0.868,95,1.052,118,0.965,119,1.078,122,1.214,123,1.649,124,1.214,125,1.214,126,2.524,127,1.078,130,0.965,134,1.649,136,1.188,137,1.649,149,0.965,166,1.404,175,0.783,177,0.924,180,0.868,186,0.782,189,0.782,193,1.472,194,0.969,197,0.376,199,1.198,201,0.783,208,1.337,212,0.64,218,0.522,226,0.47,240,0.708,251,1.074,259,0.884,263,0.64,264,1.082,265,0.868,267,1.092,283,0.578,298,0.842,310,0.965,314,1.857,316,2.006,318,2.035,319,1.214,324,1.805,329,1.857,332,1.857,344,0.979,345,2.006,346,0.965,347,0.965,354,0.64,358,0.965,362,0.965,363,0.965,364,1.476,365,0.965,366,0.965,367,0.965,369,0.965,370,0.868,371,0.965,376,0.965,384,0.979,386,1.078,387,1.791,393,2.671,395,0.965,396,0.965,397,0.965,401,0.965,402,0.965,403,0.965,413,0.965,433,0.868,435,1.649,440,2.415,446,1.327,447,1.327,448,1.649,449,1.672,579,1.857,583,1.078,637,1.078,644,1.078,646,1.078,656,1.078,664,1.078,670,1.649,672,1.649,674,1.649,681,1.649,748,1.214,749,1.385,750,1.385,751,1.385,752,1.385,753,1.385,754,1.385,755,2.117,756,1.385,757,1.385,758,1.385,759,2.117,760,1.385,762,1.385,767,1.385,769,2.117,771,1.385,772,2.117,773,2.878,774,2.117,775,1.385,776,1.214,781,1.385,783,1.385,785,1.385,786,1.385,796,1.385,798,1.385,799,1.857,800,1.385,802,2.57,803,1.385,804,2.57,806,1.385,807,1.385,809,1.385,811,1.385,817,1.385,818,1.385,825,1.385,826,1.385,827,1.385,828,1.385,829,1.385,830,2.117,831,2.002,832,2.57,833,3.101,834,2.117,835,3.101,836,2.117,837,3.101,838,2.117,839,2.117,840,3.27,841,3.101,842,2.117,843,2.117,844,1.385,845,1.385,846,1.385,847,2.117,848,1.385,849,1.385,850,1.649,851,1.385,852,1.385,853,1.385,854,1.385,855,1.385,856,1.385,857,1.385,858,1.385,859,1.385,860,1.385,861,1.385,862,2.117,863,1.385,864,1.385,865,1.385,866,1.385,867,1.385,868,1.385,869,1.385,870,1.385,871,1.385,872,1.385,873,1.385,874,1.385,875,1.385,876,1.385,877,1.385,878,1.385,879,1.385,880,1.385,881,1.385,882,1.385,883,1.385,884,2.57,885,1.385,886,1.385,887,1.385,888,1.385,889,1.385,890,1.385,891,1.385,892,1.385,893,2.117,894,2.57,895,1.385,896,2.878,897,1.385,898,1.385,899,1.385,900,1.385,901,1.385,902,1.385,903,1.385,904,2.117,905,1.385,906,1.385,907,1.385,908,1.385,909,1.385,910,1.385,911,2.117,912,1.385,913,1.385,914,1.385,915,1.385,916,1.385,917,1.385,918,2.117,919,1.385,920,1.385,921,1.385,922,1.385,923,1.385,924,1.385,925,1.385,926,1.385,927,1.385,928,1.385,929,1.385,930,1.385,931,1.385,932,1.385,933,1.385,934,1.385,935,1.385,936,1.385,1023,2.995,1024,1.959,1025,1.959,1026,1.959,1027,1.959,1028,1.959,1029,1.959]],["title/index.html",[22,0.278,776,1.53,1030,2.468]],["body/index.html",[0,0.424,4,0.391,16,0.984,26,0.032,44,1.341,58,0.324,59,0.393,60,0.259,79,1.819,118,2.905,135,3.799,157,3.38,226,0.984,232,2.746,309,3.38,455,4.107,583,2.26,686,3.38,792,3.38,952,4.425,1031,4.105,1032,4.105,1033,5.375,1034,4.105,1035,4.105,1036,4.105,1037,5.73,1038,4.105,1039,4.105,1040,4.105,1041,4.105,1042,4.105,1043,4.105,1044,4.105,1045,4.105,1046,5.375,1047,4.105,1048,5.73,1049,4.105,1050,4.105,1051,4.105,1052,4.105,1053,4.105,1054,4.105,1055,3.38,1056,4.989,1057,4.989,1058,5.591,1059,4.105,1060,4.989,1061,4.989,1062,4.105,1063,5.591,1064,4.105,1065,4.105,1066,5.375,1067,4.105,1068,4.105]],["title/classes/jsonImage.html",[37,0.058,657,1.833]],["body/classes/jsonImage.html",[0,0.395,3,0.396,4,0.336,9,0.395,11,0.6,15,1.04,16,0.845,18,1.04,20,1.04,22,0.396,23,0.772,25,0.461,26,0.041,27,1.016,32,1.087,34,0.564,35,0.396,36,0.51,37,0.09,42,1.481,50,0.938,58,0.278,59,0.357,60,0.222,68,2.495,76,1.729,90,0.461,130,1.735,149,1.735,166,0.845,177,0.676,186,0.676,189,1.016,191,0.938,192,0.845,194,1.208,197,0.676,208,0.845,226,0.845,240,1.638,251,1.48,252,0.938,259,1.04,264,1.273,267,0.87,268,0.938,298,0.676,310,1.735,316,1.735,318,2.19,322,2.489,344,1.481,354,1.151,382,1.561,384,1.151,417,1.561,427,2.183,428,2.183,429,2.183,433,1.561,446,2.009,447,1.561,636,2.489,637,1.939,638,2.899,639,2.899,644,1.939,645,2.899,646,1.939,648,2.899,649,2.899,656,2.495,657,3.107,658,2.899,659,2.899,660,2.899,661,2.899,662,2.899,663,2.899,664,1.939,665,2.899,666,3.732,667,2.899,668,2.899,669,2.899,670,2.495,671,2.899,672,2.495,673,2.899,674,2.495,675,2.899,676,2.899,677,2.899,678,2.899,679,2.899,680,2.899,681,1.939,682,2.899,683,2.899,684,2.899,685,2.899,1069,3.522,1070,3.522]],["title/classes/jsonResponse.html",[37,0.058,850,1.627]],["body/classes/jsonResponse.html",[0,0.298,2,0.682,3,0.235,4,0.199,9,0.298,11,0.355,15,0.616,16,0.5,18,0.616,20,0.616,22,0.425,23,0.535,24,2.11,25,0.411,26,0.041,27,1.065,32,0.753,34,0.612,35,0.235,36,0.425,37,0.089,42,1.607,52,0.5,58,0.164,59,0.248,60,0.132,66,1.028,75,0.676,76,1.374,87,0.682,90,0.273,93,0.924,95,1.009,118,1.028,119,1.148,122,1.293,123,1.729,124,1.293,125,1.293,126,2.607,127,1.148,130,1.028,134,1.729,136,1.235,137,1.729,149,1.028,166,1.4,175,0.834,177,0.91,180,0.924,186,0.603,189,0.808,193,1.135,197,0.401,199,0.834,201,0.834,208,1.286,212,0.682,218,0.556,226,0.5,240,1.135,251,0.616,259,0.928,263,0.682,264,1.135,265,0.924,267,1.102,283,0.616,298,0.866,310,1.028,314,1.947,316,2.336,318,1.896,319,1.293,324,1.392,329,1.947,332,1.947,344,1.027,345,2.072,346,1.028,347,1.028,354,0.682,358,1.028,362,1.028,363,1.028,364,1.548,365,1.028,366,1.028,367,1.028,369,1.028,370,0.924,371,1.028,376,1.028,384,1.027,386,1.148,387,1.862,393,2.424,395,1.028,396,1.028,397,1.028,401,1.028,402,1.028,403,1.028,413,1.028,433,0.924,435,1.729,440,2.08,446,1.392,447,1.392,448,1.729,449,1.713,579,1.947,583,1.148,637,1.148,644,1.148,646,1.148,656,1.729,664,1.148,670,1.729,672,1.729,674,1.729,681,1.729,748,1.293,749,1.475,750,1.475,751,1.475,752,1.475,753,1.475,754,1.475,755,2.221,756,1.475,757,1.475,758,1.475,759,2.221,760,1.475,762,1.475,767,1.475,769,2.221,771,1.475,772,2.221,773,2.973,774,2.221,775,1.475,776,1.293,781,1.475,783,1.475,785,1.475,786,1.475,796,1.475,798,1.475,799,1.947,800,1.475,802,2.221,803,1.475,804,2.671,806,1.475,807,1.475,809,1.475,811,1.475,817,1.475,818,1.475,825,1.475,826,1.475,827,1.475,828,1.475,829,1.475,830,1.475,831,1.729,832,1.475,833,3.189,834,1.475,835,2.671,836,1.475,837,2.671,838,1.475,839,1.475,840,2.973,841,2.671,842,1.475,843,1.475,844,1.475,845,1.475,846,1.475,847,2.221,848,1.475,849,1.475,850,2.08,851,1.475,852,1.475,853,1.475,854,1.475,855,1.475,856,1.475,857,1.475,858,1.475,859,1.475,860,1.475,861,1.475,862,2.221,863,1.475,864,1.475,865,1.475,866,1.475,867,1.475,868,1.475,869,1.475,870,1.475,871,1.475,872,1.475,873,1.475,874,1.475,875,1.475,876,1.475,877,1.475,878,1.475,879,1.475,880,1.475,881,1.475,882,1.475,883,1.475,884,2.671,885,1.475,886,1.475,887,1.475,888,1.475,889,1.475,890,1.475,891,1.475,892,1.475,893,2.221,894,2.671,895,1.475,896,2.973,897,1.475,898,1.475,899,1.475,900,1.475,901,1.475,902,1.475,903,1.475,904,2.221,905,1.475,906,1.475,907,1.475,908,1.475,909,1.475,910,1.475,911,2.221,912,1.475,913,1.475,914,1.475,915,1.475,916,1.475,917,1.475,918,2.221,919,1.475,920,1.475,921,1.475,922,1.475,923,1.475,924,1.475,925,1.475,926,1.475,927,1.475,928,1.475,929,1.475,930,1.475,931,1.475,932,1.475,933,1.475,934,1.475,935,1.475,936,1.475,1071,2.086,1072,2.086]],["title/modules.html",[63,2.222]],["body/modules.html",[26,0.035,58,0.374,59,0.428,60,0.299,62,2.94,63,2.611,74,2.611,84,2.94,172,2.337,1073,4.743,1074,4.743,1075,5.433,1076,4.743]],["title/overview.html",[1077,3.323]],["body/overview.html",[1,1.927,2,1.344,26,0.039,38,1.644,46,1.433,48,1.588,50,1.433,52,1.29,54,1.433,58,0.324,59,0.394,60,0.259,61,2.549,62,3.842,63,2.263,64,2.549,65,3.385,66,2.026,67,3.385,68,2.263,69,3.385,70,3.385,71,3.385,72,3.385,73,3.385,74,2.961,75,1.157,76,1.758,77,4.112,78,3.385,79,1.822,89,2.263,149,2.026,168,2.906,340,2.263,741,4.112,1077,3.385,1078,4.112,1079,4.994,1080,4.112]],["title/routes.html",[89,2.222]],["body/routes.html",[26,0.035,58,0.38,59,0.432,60,0.304,89,2.656]],["title/classes/searchResult.html",[37,0.058,439,1.833]],["body/classes/searchResult.html",[0,0.394,3,0.394,4,0.334,9,0.276,11,0.597,15,1.034,16,0.84,18,1.034,20,1.034,22,0.394,23,0.77,24,2.186,25,0.715,26,0.04,27,1.143,32,1.342,34,0.595,35,0.394,36,0.509,37,0.108,42,1.144,46,0.933,58,0.276,59,0.356,60,0.315,86,2.475,87,1.144,90,0.458,131,3.733,132,2.475,138,1.4,149,1.725,166,1.199,177,0.672,186,0.672,189,1.014,191,0.933,192,0.84,194,1.203,197,0.672,251,1.476,252,1.332,259,1.034,260,1.725,263,1.144,267,0.867,268,0.933,298,0.867,324,2.216,342,2.171,344,1.476,351,1.928,354,1.144,382,1.552,384,1.144,416,2.475,417,1.552,418,3.718,419,4.116,420,2.883,421,2.883,422,2.883,423,2.883,426,3.718,427,2.171,428,2.171,429,2.171,432,2.883,433,1.552,434,2.883,435,2.486,437,3.718,438,3.718,439,2.8,440,2.752,441,2.883,442,2.883,443,2.883,444,2.883,445,2.883,446,1.552,447,1.552,448,2.486,449,1.266,1081,3.502,1082,3.502,1083,3.502,1084,3.502,1085,3.502,1086,3.502]],["title/miscellaneous/variables.html",[192,0.853,1087,2.032]],["body/miscellaneous/variables.html",[22,0.5,25,0.727,26,0.04,28,2.009,29,2.223,58,0.35,59,0.412,60,0.28,192,1.065,283,1.311,373,2.878,398,3.241,486,3.696,998,3.655,999,4.725,1001,3.655,1002,3.655,1003,4.305,1055,4.305,1087,3.655,1088,5.229,1089,4.44,1090,4.44,1091,4.44,1092,4.44]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{},"dependencies.html":{},"classes/formDat.html":{},"index.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/searchResult.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":449,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["0.1",{"_index":550,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.4",{"_index":734,"title":{},"body":{"components/PostComponent.html":{}}}],["0.5",{"_index":544,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{}}}],["0.521",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["0.5s",{"_index":695,"title":{},"body":{"components/PostComponent.html":{}}}],["0.8",{"_index":493,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.9.1",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":970,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0px",{"_index":710,"title":{},"body":{"components/PostComponent.html":{}}}],["1",{"_index":508,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.0.0",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["100",{"_index":524,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{}}}],["1000",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["100px",{"_index":941,"title":{},"body":{"components/ProfileComponent.html":{}}}],["11/13",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["114",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["12",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["13/23",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["13px",{"_index":744,"title":{},"body":{"components/PostComponent.html":{}}}],["13px/1",{"_index":528,"title":{},"body":{"components/HomeComponent.html":{}}}],["14",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["193050026",{"_index":468,"title":{},"body":{"components/HomeComponent.html":{}}}],["193050033",{"_index":471,"title":{},"body":{"components/HomeComponent.html":{}}}],["193050034",{"_index":474,"title":{},"body":{"components/HomeComponent.html":{}}}],["1deg",{"_index":707,"title":{},"body":{"components/PostComponent.html":{}}}],["1px",{"_index":548,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["2",{"_index":741,"title":{},"body":{"components/PostComponent.html":{},"overview.html":{}}}],["2/9",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":708,"title":{},"body":{"components/PostComponent.html":{},"coverage.html":{}}}],["2000",{"_index":892,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["2018",{"_index":475,"title":{},"body":{"components/HomeComponent.html":{}}}],["20px",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["21px/1",{"_index":554,"title":{},"body":{"components/HomeComponent.html":{}}}],["22",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["22s",{"_index":568,"title":{},"body":{"components/HomeComponent.html":{}}}],["235",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["23px",{"_index":525,"title":{},"body":{"components/HomeComponent.html":{}}}],["248",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["255",{"_index":492,"title":{},"body":{"components/HomeComponent.html":{}}}],["28px",{"_index":563,"title":{},"body":{"components/HomeComponent.html":{}}}],["2px",{"_index":705,"title":{},"body":{"components/PostComponent.html":{}}}],["3/10",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":712,"title":{},"body":{"components/PostComponent.html":{},"coverage.html":{}}}],["33",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":709,"title":{},"body":{"components/PostComponent.html":{}}}],["4",{"_index":1080,"title":{},"body":{"overview.html":{}}}],["4/6",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":714,"title":{},"body":{"components/PostComponent.html":{}}}],["400",{"_index":553,"title":{},"body":{"components/HomeComponent.html":{}}}],["400px",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["44",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["46px",{"_index":745,"title":{},"body":{"components/PostComponent.html":{}}}],["4d6de6",{"_index":558,"title":{},"body":{"components/HomeComponent.html":{}}}],["4px",{"_index":968,"title":{},"body":{"components/RegisterComponent.html":{}}}],["5",{"_index":1079,"title":{},"body":{"overview.html":{}}}],["5.1.2",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["56",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":484,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["6",{"_index":1078,"title":{},"body":{"overview.html":{}}}],["6.4.0",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":715,"title":{},"body":{"components/PostComponent.html":{}}}],["66",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["699",{"_index":459,"title":{},"body":{"components/HomeComponent.html":{}}}],["70",{"_index":716,"title":{},"body":{"components/PostComponent.html":{},"components/ProfileComponent.html":{}}}],["71",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":565,"title":{},"body":{"components/HomeComponent.html":{}}}],["8.2.11",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["8.3.12",{"_index":1035,"title":{},"body":{"index.html":{}}}],["80",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["84",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":743,"title":{},"body":{"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["90",{"_index":717,"title":{},"body":{"components/PostComponent.html":{}}}],["900",{"_index":527,"title":{},"body":{"components/HomeComponent.html":{}}}],["_i",{"_index":448,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["_id",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["a:active",{"_index":497,"title":{},"body":{"components/HomeComponent.html":{}}}],["a:before",{"_index":551,"title":{},"body":{"components/HomeComponent.html":{}}}],["a:focus",{"_index":496,"title":{},"body":{"components/HomeComponent.html":{}}}],["a:hover:before",{"_index":504,"title":{},"body":{"components/HomeComponent.html":{}}}],["aakash",{"_index":472,"title":{},"body":{"components/HomeComponent.html":{}}}],["absolute",{"_index":739,"title":{},"body":{"components/PostComponent.html":{}}}],["action",{"_index":804,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["acts",{"_index":798,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["actual_component",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["actuals",{"_index":836,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["add",{"_index":719,"title":{},"body":{"components/PostComponent.html":{}}}],["address",{"_index":196,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["again",{"_index":697,"title":{},"body":{"components/PostComponent.html":{}}}],["alert(\"edit",{"_index":928,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["alert(\"search",{"_index":442,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["alert('inconsistent",{"_index":414,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["align",{"_index":520,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["angular",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["angular/ckeditor",{"_index":829,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["angular/common",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileComponent.html":{},"dependencies.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["angular/common/http",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["angular/compiler",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"dependencies.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["angular/forms",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["angular/material",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileComponent.html":{},"dependencies.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["angular/material/button",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divider",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["angular/material/expansion",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"dependencies.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["animation",{"_index":691,"title":{},"body":{"components/PostComponent.html":{}}}],["another",{"_index":201,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"index.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["app.component",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apple",{"_index":530,"title":{},"body":{"components/HomeComponent.html":{}}}],["appmodule",{"_index":62,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":148,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":74,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arial",{"_index":538,"title":{},"body":{"components/HomeComponent.html":{}}}],["array",{"_index":435,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["arraylist",{"_index":936,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["artifacts",{"_index":1049,"title":{},"body":{"index.html":{}}}],["assets/images/tmp",{"_index":919,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["auth",{"_index":372,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["authenticating",{"_index":374,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["authentication",{"_index":265,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["authentication.service",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["authenticationservice",{"_index":75,"title":{"injectables/AuthenticationService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"overview.html":{}}}],["authorization",{"_index":290,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["authservice",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["automatically",{"_index":1041,"title":{},"body":{"index.html":{}}}],["available",{"_index":172,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"modules.html":{}}}],["avatar",{"_index":857,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["avatarbase64",{"_index":856,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["avatarlist",{"_index":751,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["b",{"_index":835,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["back",{"_index":687,"title":{},"body":{"components/PostComponent.html":{}}}],["backend",{"_index":260,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/searchResult.html":{}}}],["background",{"_index":479,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["banerjee",{"_index":473,"title":{},"body":{"components/HomeComponent.html":{}}}],["base",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["base.pipe",{"_index":293,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["base64image",{"_index":752,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["based",{"_index":434,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["baseline",{"_index":562,"title":{},"body":{"components/HomeComponent.html":{}}}],["bearer",{"_index":291,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["being",{"_index":234,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["below",{"_index":951,"title":{},"body":{"components/ProfileComponent.html":{}}}],["beta.2",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["bg",{"_index":488,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{}}}],["black",{"_index":735,"title":{},"body":{"components/PostComponent.html":{}}}],["blinkmacsystemfont",{"_index":532,"title":{},"body":{"components/HomeComponent.html":{}}}],["block",{"_index":560,"title":{},"body":{"components/HomeComponent.html":{}}}],["blur",{"_index":720,"title":{},"body":{"components/PostComponent.html":{}}}],["blur(8px",{"_index":723,"title":{},"body":{"components/PostComponent.html":{}}}],["boolean",{"_index":214,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["bootstrap",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileComponent.html":{},"dependencies.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileComponent.html":{},"dependencies.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["border",{"_index":547,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["bottom",{"_index":503,"title":{},"body":{"components/HomeComponent.html":{}}}],["box",{"_index":482,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["browse",{"_index":1075,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":159,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1048,"title":{},"body":{"index.html":{}}}],["builds",{"_index":830,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["c",{"_index":837,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["called",{"_index":880,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["canactivate",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["capture",{"_index":791,"title":{},"body":{"components/ProfileComponent.html":{}}}],["card",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["carrying",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["center",{"_index":522,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["change",{"_index":792,"title":{},"body":{"components/ProfileComponent.html":{},"index.html":{}}}],["changed",{"_index":833,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["changes",{"_index":783,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["check",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"index.html":{},"classes/jsonResponse.html":{}}}],["checkbox",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{}}}],["checkcheckboxvalue",{"_index":576,"title":{},"body":{"components/LoginComponent.html":{}}}],["checkcheckboxvalue(event",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{}}}],["checked",{"_index":753,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["checkout",{"_index":396,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["checks",{"_index":212,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["ckeditor4",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileComponent.html":{},"dependencies.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["ckeditor4.eventinfo",{"_index":789,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ckeditormodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":37,"title":{"classes/AppPage.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["classes",{"_index":149,"title":{},"body":{"classes/AppPage.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"overview.html":{},"classes/searchResult.html":{}}}],["classic",{"_index":495,"title":{},"body":{"components/HomeComponent.html":{}}}],["cli",{"_index":1033,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{}}}],["closeresult",{"_index":754,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["cluster_appmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1044,"title":{},"body":{"index.html":{}}}],["col",{"_index":546,"title":{},"body":{"components/HomeComponent.html":{}}}],["color",{"_index":480,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["column",{"_index":519,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["completed",{"_index":883,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["complex",{"_index":366,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"classes/formDat.html":{},"index.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["component_template",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"overview.html":{}}}],["confpassword",{"_index":379,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["connecting",{"_index":427,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{},"classes/jsonImage.html":{},"classes/searchResult.html":{}}}],["connects",{"_index":775,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.error(err",{"_index":413,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log('data.token",{"_index":296,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["console.log('deleting",{"_index":934,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log('gender",{"_index":404,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["console.log('redirecting",{"_index":926,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log('response",{"_index":908,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log('subscribed",{"_index":907,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log('token",{"_index":271,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["console.log('your",{"_index":401,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log(`${this.serveruri}/posts/add",{"_index":333,"title":{},"body":{"injectables/DiaryService.html":{}}}],["console.log(base",{"_index":292,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["console.log(file",{"_index":888,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log(id1.id",{"_index":909,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log(medium",{"_index":902,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log(obj",{"_index":683,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["console.log(postdata",{"_index":334,"title":{},"body":{"injectables/DiaryService.html":{}}}],["console.log(reader",{"_index":878,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log(reader.result.tostring().length",{"_index":886,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log(res",{"_index":681,"title":{},"body":{"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["console.log(this.base64image",{"_index":915,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log(this.id",{"_index":678,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["console.log(this.imgpath",{"_index":685,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["console.log(this.postlist",{"_index":903,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["console.log(this.rememberme",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["constructor",{"_index":186,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["constructor(diaryservice",{"_index":642,"title":{},"body":{"components/PostComponent.html":{}}}],["constructor(formbuilder",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":187,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{}}}],["constructor(i",{"_index":843,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["constructor(private",{"_index":268,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/jsonImage.html":{},"classes/searchResult.html":{}}}],["constructor(public",{"_index":854,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["constructor(queryservice",{"_index":424,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(snackbar",{"_index":768,"title":{},"body":{"components/ProfileComponent.html":{}}}],["container",{"_index":545,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["containing",{"_index":656,"title":{},"body":{"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["contains",{"_index":393,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["content",{"_index":162,"title":{},"body":{"classes/AppPage.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["context",{"_index":486,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["copyright",{"_index":476,"title":{},"body":{"components/HomeComponent.html":{}}}],["count",{"_index":699,"title":{},"body":{"components/PostComponent.html":{}}}],["course",{"_index":454,"title":{},"body":{"components/HomeComponent.html":{}}}],["cover",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["coverage",{"_index":971,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":365,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["created",{"_index":839,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["credentials",{"_index":358,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["cs",{"_index":458,"title":{},"body":{"components/HomeComponent.html":{}}}],["d",{"_index":840,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["dark",{"_index":487,"title":{},"body":{"components/HomeComponent.html":{}}}],["data",{"_index":298,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["data.post",{"_index":331,"title":{},"body":{"injectables/DiaryService.html":{}}}],["data.title",{"_index":330,"title":{},"body":{"injectables/DiaryService.html":{}}}],["data.token",{"_index":295,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["database",{"_index":433,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["date",{"_index":898,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["date.now",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["datepipe",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["ddd",{"_index":967,"title":{},"body":{"components/RegisterComponent.html":{}}}],["declarations",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorator",{"_index":170,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["delete",{"_index":313,"title":{},"body":{"injectables/DiaryService.html":{},"components/ProfileComponent.html":{}}}],["deleted",{"_index":780,"title":{},"body":{"components/ProfileComponent.html":{}}}],["deletepost",{"_index":304,"title":{},"body":{"injectables/DiaryService.html":{},"components/ProfileComponent.html":{}}}],["deletepost(title",{"_index":777,"title":{},"body":{"components/ProfileComponent.html":{}}}],["deletepost(uname",{"_index":311,"title":{},"body":{"injectables/DiaryService.html":{}}}],["delets",{"_index":779,"title":{},"body":{"components/ProfileComponent.html":{}}}],["demo",{"_index":853,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["dependencies",{"_index":64,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":175,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["deploy",{"_index":327,"title":{},"body":{"injectables/DiaryService.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["design",{"_index":556,"title":{},"body":{"components/HomeComponent.html":{}}}],["details",{"_index":209,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["dev",{"_index":1039,"title":{},"body":{"index.html":{}}}],["development",{"_index":1036,"title":{},"body":{"index.html":{}}}],["diary",{"_index":328,"title":{},"body":{"injectables/DiaryService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["diary.service",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["diaryservice",{"_index":76,"title":{"injectables/DiaryService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DiaryService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"overview.html":{}}}],["different",{"_index":371,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["direction",{"_index":518,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["directive",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["directives",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1047,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1052,"title":{},"body":{"index.html":{}}}],["disp:hover",{"_index":688,"title":{},"body":{"components/PostComponent.html":{}}}],["display",{"_index":417,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/jsonImage.html":{},"classes/searchResult.html":{}}}],["displayed",{"_index":806,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["displays",{"_index":772,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["dist",{"_index":1051,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["don't",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["done",{"_index":452,"title":{},"body":{"components/HomeComponent.html":{}}}],["duration",{"_index":891,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["dutta",{"_index":467,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynamic",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["dynammic",{"_index":943,"title":{},"body":{"components/ProfileComponent.html":{}}}],["e",{"_index":841,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["e2e",{"_index":1064,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":150,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":156,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":154,"title":{},"body":{"classes/AppPage.html":{}}}],["ease",{"_index":569,"title":{},"body":{"components/HomeComponent.html":{}}}],["edit",{"_index":945,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editor",{"_index":793,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editordata",{"_index":755,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["editpost",{"_index":761,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editpost(title",{"_index":781,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["effect",{"_index":721,"title":{},"body":{"components/PostComponent.html":{}}}],["element",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["element(by.css('app",{"_index":161,"title":{},"body":{"classes/AppPage.html":{}}}],["enabled",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{}}}],["end",{"_index":1063,"title":{},"body":{"index.html":{}}}],["enter",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["environment",{"_index":999,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":412,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["eveent",{"_index":794,"title":{},"body":{"components/ProfileComponent.html":{}}}],["event",{"_index":387,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["event.target.files.length",{"_index":873,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["event.target.files[0",{"_index":887,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["example",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["execute",{"_index":1060,"title":{},"body":{"index.html":{}}}],["exp",{"_index":256,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["export",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["exports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PostComponent.html":{},"classes/jsonImage.html":{},"overview.html":{}}}],["expression",{"_index":869,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["f14f",{"_index":552,"title":{},"body":{"components/HomeComponent.html":{}}}],["f1f1f1",{"_index":738,"title":{},"body":{"components/PostComponent.html":{}}}],["fallback",{"_index":732,"title":{},"body":{"components/PostComponent.html":{}}}],["false",{"_index":283,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"miscellaneous/variables.html":{}}}],["female",{"_index":360,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["fetch",{"_index":648,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["fetched",{"_index":438,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["fetches",{"_index":207,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["fetchimagebase64",{"_index":305,"title":{},"body":{"injectables/DiaryService.html":{}}}],["fetchimagebase64(uname",{"_index":315,"title":{},"body":{"injectables/DiaryService.html":{}}}],["ffffff",{"_index":498,"title":{},"body":{"components/HomeComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{},"dependencies.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["filereader",{"_index":875,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["files",{"_index":1043,"title":{},"body":{"index.html":{}}}],["filter",{"_index":722,"title":{},"body":{"components/PostComponent.html":{}}}],["finished",{"_index":696,"title":{},"body":{"components/PostComponent.html":{}}}],["fit",{"_index":947,"title":{},"body":{"components/ProfileComponent.html":{}}}],["fl",{"_index":916,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["fl.name",{"_index":920,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["flag",{"_index":1054,"title":{},"body":{"index.html":{}}}],["flex",{"_index":517,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["font",{"_index":526,"title":{},"body":{"components/HomeComponent.html":{}}}],["footer",{"_index":494,"title":{},"body":{"components/HomeComponent.html":{}}}],["form",{"_index":362,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["formbuilder",{"_index":345,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["formcontrol",{"_index":348,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["formdat",{"_index":831,"title":{"classes/formDat.html":{}},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["formdat(postdata.title",{"_index":923,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["formdat(thisid",{"_index":912,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["formgroup",{"_index":346,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["formsmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["full",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"components/PostComponent.html":{}}}],["function",{"_index":384,"title":{},"body":{"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["functionalities",{"_index":851,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["functionality",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{}}}],["further",{"_index":1065,"title":{},"body":{"index.html":{}}}],["gen",{"_index":357,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["gender",{"_index":255,"title":{"interfaces/Gender.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Gender.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{}}}],["gender.viewvalue",{"_index":965,"title":{},"body":{"components/RegisterComponent.html":{}}}],["genders",{"_index":359,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["generate",{"_index":1046,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1032,"title":{},"body":{"index.html":{}}}],["getposts",{"_index":306,"title":{},"body":{"injectables/DiaryService.html":{}}}],["getposts(uname",{"_index":320,"title":{},"body":{"injectables/DiaryService.html":{}}}],["getting",{"_index":776,"title":{"index.html":{}},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["gettitletext",{"_index":152,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":179,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["getuserdetails",{"_index":181,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["go",{"_index":686,"title":{},"body":{"components/PostComponent.html":{},"index.html":{}}}],["graph",{"_index":1076,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":489,"title":{},"body":{"components/HomeComponent.html":{}}}],["guard.service",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["h:mm:ss",{"_index":901,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["handle",{"_index":637,"title":{},"body":{"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["handles",{"_index":264,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["handling",{"_index":351,"title":{},"body":{"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/searchResult.html":{}}}],["header",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["headers",{"_index":289,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["height",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["height:100",{"_index":742,"title":{},"body":{"components/PostComponent.html":{}}}],["hello",{"_index":817,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["help",{"_index":1066,"title":{},"body":{"index.html":{}}}],["helps",{"_index":197,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["helvetica",{"_index":536,"title":{},"body":{"components/HomeComponent.html":{}}}],["here",{"_index":397,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["hidden",{"_index":566,"title":{},"body":{"components/HomeComponent.html":{}}}],["hierrarchy",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/searchResult.html":{}}}],["home'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["home.component.css",{"_index":420,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["home.component.html",{"_index":421,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["home/home.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":46,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{},"classes/searchResult.html":{}}}],["html",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["http",{"_index":195,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["http://localhost:3000",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["http://localhost:4200",{"_index":1040,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":188,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["httpclientmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["iat",{"_index":258,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["icons",{"_index":557,"title":{},"body":{"components/HomeComponent.html":{}}}],["id",{"_index":316,"title":{},"body":{"injectables/DiaryService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["id1",{"_index":904,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["id1.id",{"_index":910,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["identifier",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":381,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["image",{"_index":318,"title":{},"body":{"injectables/DiaryService.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["img",{"_index":332,"title":{},"body":{"injectables/DiaryService.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["imgpath",{"_index":640,"title":{},"body":{"components/PostComponent.html":{}}}],["imgpath:string",{"_index":659,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["implement",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{}}}],["implemented",{"_index":929,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["implements",{"_index":354,"title":{},"body":{"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["import",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{},"miscellaneous/variables.html":{}}}],["indian",{"_index":460,"title":{},"body":{"components/HomeComponent.html":{}}}],["indicates",{"_index":368,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["infinite",{"_index":700,"title":{},"body":{"components/PostComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["information",{"_index":646,"title":{},"body":{"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["initialize",{"_index":191,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/jsonImage.html":{},"classes/searchResult.html":{}}}],["initializing",{"_index":771,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["initilize",{"_index":834,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["injectable",{"_index":167,"title":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{}}}],["injectables",{"_index":168,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"overview.html":{}}}],["injected",{"_index":174,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["inline",{"_index":559,"title":{},"body":{"components/HomeComponent.html":{}}}],["inner",{"_index":516,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=\"tel",{"_index":966,"title":{},"body":{"components/RegisterComponent.html":{}}}],["input[type=\"tel\"]:focus",{"_index":969,"title":{},"body":{"components/RegisterComponent.html":{}}}],["institute",{"_index":461,"title":{},"body":{"components/HomeComponent.html":{}}}],["integrity",{"_index":385,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["interface",{"_index":248,"title":{"interfaces/Gender.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Gender.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{}}}],["interfaces",{"_index":340,"title":{},"body":{"interfaces/Gender.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"overview.html":{}}}],["isloggedin",{"_index":182,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["isprivate",{"_index":832,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["issubmitted",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{}}}],["issumbitted",{"_index":356,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["items",{"_index":521,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["iterate",{"_index":871,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["iteration",{"_index":698,"title":{},"body":{"components/PostComponent.html":{}}}],["json",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["json.parse(payload",{"_index":277,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["jsonimage",{"_index":657,"title":{"classes/jsonImage.html":{}},"body":{"components/PostComponent.html":{},"coverage.html":{},"classes/jsonImage.html":{}}}],["jsonresponse",{"_index":850,"title":{"classes/jsonResponse.html":{}},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["jst",{"_index":921,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["justify",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["karma",{"_index":1062,"title":{},"body":{"index.html":{}}}],["keep",{"_index":937,"title":{},"body":{"components/ProfileComponent.html":{}}}],["keyframes",{"_index":701,"title":{},"body":{"components/PostComponent.html":{}}}],["know",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["lab",{"_index":457,"title":{},"body":{"components/HomeComponent.html":{}}}],["last",{"_index":693,"title":{},"body":{"components/PostComponent.html":{}}}],["lato",{"_index":529,"title":{},"body":{"components/HomeComponent.html":{}}}],["left",{"_index":506,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["legend",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["li",{"_index":501,"title":{},"body":{"components/HomeComponent.html":{}}}],["line",{"_index":867,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["link",{"_index":440,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["list",{"_index":500,"title":{},"body":{"components/HomeComponent.html":{}}}],["listener",{"_index":388,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["loaded",{"_index":319,"title":{},"body":{"injectables/DiaryService.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["loadpostsdata",{"_index":762,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["loads",{"_index":785,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["local",{"_index":204,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["localstorage.getitem('mean",{"_index":272,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["localstorage.setitem('mean",{"_index":269,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["location.replace(\"https://www.w3schools.com",{"_index":927,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["logged",{"_index":213,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["logging",{"_index":364,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["login",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["login'|'user/add'|'profile",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["login'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["login(user",{"_index":215,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["login.component.css",{"_index":571,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":572,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login_container",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["logincomponent",{"_index":48,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logindata",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{}}}],["logindata.login",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{}}}],["logindata.password",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":183,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["logs",{"_index":219,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["make",{"_index":692,"title":{},"body":{"components/PostComponent.html":{}}}],["makes",{"_index":948,"title":{},"body":{"components/ProfileComponent.html":{}}}],["male",{"_index":361,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["manage",{"_index":342,"title":{},"body":{"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"classes/searchResult.html":{}}}],["map",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["map((data",{"_index":294,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["margin",{"_index":505,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["marks",{"_index":171,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["mat",{"_index":946,"title":{},"body":{"components/ProfileComponent.html":{}}}],["matbuttonmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{},"dependencies.html":{},"classes/formDat.html":{},"index.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/searchResult.html":{},"miscellaneous/variables.html":{}}}],["matdividermodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["material",{"_index":555,"title":{},"body":{"components/HomeComponent.html":{}}}],["matexpansionmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":769,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["matsnackbarmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["mattabsmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["mdbootstrap.com",{"_index":477,"title":{},"body":{"components/HomeComponent.html":{}}}],["medium",{"_index":896,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["members",{"_index":465,"title":{},"body":{"components/HomeComponent.html":{}}}],["memory",{"_index":205,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["message",{"_index":773,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["method",{"_index":233,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["methods",{"_index":151,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["middle",{"_index":729,"title":{},"body":{"components/PostComponent.html":{}}}],["miscellaneous",{"_index":1087,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mmm",{"_index":899,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["modaldismissreasons",{"_index":826,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["model",{"_index":756,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["module",{"_index":61,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":63,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1067,"title":{},"body":{"index.html":{}}}],["moving",{"_index":198,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["moz",{"_index":747,"title":{},"body":{"components/PostComponent.html":{}}}],["multiple",{"_index":428,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{},"classes/jsonImage.html":{},"classes/searchResult.html":{}}}],["mumbai",{"_index":463,"title":{},"body":{"components/HomeComponent.html":{}}}],["mydiary",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["mydiaryv1",{"_index":1031,"title":{},"body":{"index.html":{}}}],["myurl",{"_index":641,"title":{},"body":{"components/PostComponent.html":{}}}],["myurl:string",{"_index":658,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"index.html":{}}}],["nav",{"_index":499,"title":{},"body":{"components/HomeComponent.html":{}}}],["navbar",{"_index":478,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["navigate",{"_index":309,"title":{},"body":{"injectables/DiaryService.html":{},"index.html":{}}}],["navigateto",{"_index":153,"title":{},"body":{"classes/AppPage.html":{}}}],["neue",{"_index":537,"title":{},"body":{"components/HomeComponent.html":{}}}],["new",{"_index":226,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Gender.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{},"classes/formDat.html":{},"index.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["next",{"_index":866,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["ng",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileComponent.html":{},"dependencies.html":{},"classes/formDat.html":{},"index.html":{},"classes/jsonResponse.html":{}}}],["ng2",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["ngbmodal",{"_index":825,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["ngbmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":382,"title":{},"body":{"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"classes/jsonImage.html":{},"classes/searchResult.html":{}}}],["nicely",{"_index":726,"title":{},"body":{"components/PostComponent.html":{}}}],["none",{"_index":514,"title":{},"body":{"components/HomeComponent.html":{}}}],["null",{"_index":278,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["number",{"_index":257,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["obejct",{"_index":363,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["obj",{"_index":682,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["obj[0].image",{"_index":684,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["object",{"_index":373,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":220,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["ol",{"_index":512,"title":{},"body":{"components/HomeComponent.html":{}}}],["once",{"_index":881,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["onchange",{"_index":763,"title":{},"body":{"components/ProfileComponent.html":{}}}],["onchange(event",{"_index":788,"title":{},"body":{"components/ProfileComponent.html":{}}}],["one",{"_index":199,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["onfilechange",{"_index":764,"title":{},"body":{"components/ProfileComponent.html":{}}}],["onfilechange(event",{"_index":796,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["oninit",{"_index":344,"title":{},"body":{"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["onselect",{"_index":956,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onselect(event",{"_index":390,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["onsubmit",{"_index":577,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["onsubmit(logindata",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmit(postdata",{"_index":800,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["onsubmit(registerdata",{"_index":394,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["opacity",{"_index":507,"title":{},"body":{"components/HomeComponent.html":{}}}],["open",{"_index":944,"title":{},"body":{"components/ProfileComponent.html":{}}}],["opensnackbar",{"_index":765,"title":{},"body":{"components/ProfileComponent.html":{}}}],["opensnackbar(message",{"_index":803,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["optional",{"_index":194,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/searchResult.html":{}}}],["order",{"_index":402,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["out",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1077,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1006,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":502,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["page/image",{"_index":730,"title":{},"body":{"components/PostComponent.html":{}}}],["param",{"_index":267,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["parameters",{"_index":193,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["part",{"_index":453,"title":{},"body":{"components/HomeComponent.html":{}}}],["pass",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["passes",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{}}}],["password",{"_index":378,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["passwords",{"_index":415,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["path",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["pathmatch",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":274,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["phone",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Gender.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["phonenum",{"_index":380,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["please",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["position",{"_index":727,"title":{},"body":{"components/PostComponent.html":{}}}],["post",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["post'|'get",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["post'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["post.component.css",{"_index":638,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["post.component.html",{"_index":639,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["post/post.component",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["post:string",{"_index":662,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["post?img",{"_index":925,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["post?imgpath",{"_index":849,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["postcomponent",{"_index":50,"title":{"components/PostComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"classes/jsonImage.html":{},"overview.html":{}}}],["postdata",{"_index":329,"title":{},"body":{"injectables/DiaryService.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["postdata.avatar",{"_index":917,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["postdata.post",{"_index":894,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["postdata.title",{"_index":913,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["posted",{"_index":786,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["postform",{"_index":757,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["posting",{"_index":644,"title":{},"body":{"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["postlist",{"_index":758,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["posts",{"_index":322,"title":{},"body":{"injectables/DiaryService.html":{},"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["previously",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{}}}],["primary",{"_index":490,"title":{},"body":{"components/HomeComponent.html":{}}}],["private",{"_index":177,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["process",{"_index":395,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["prod",{"_index":1053,"title":{},"body":{"index.html":{}}}],["production",{"_index":1055,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["profile'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["profile.component.css",{"_index":749,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["profile.component.html",{"_index":750,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["profile/profile.component",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profilecomponent",{"_index":52,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"overview.html":{}}}],["profileguardservice",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["project",{"_index":455,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["promise",{"_index":160,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["protractor",{"_index":157,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provided",{"_index":173,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["providedin",{"_index":262,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["pst.timestamp",{"_index":942,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pst.title",{"_index":939,"title":{},"body":{"components/ProfileComponent.html":{}}}],["public",{"_index":180,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["purpose",{"_index":649,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["pvt",{"_index":325,"title":{},"body":{"injectables/DiaryService.html":{}}}],["queries",{"_index":441,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["query",{"_index":419,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["query.service",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["queryservice",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["radius",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reactiveformsmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":877,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["readasdataurl",{"_index":882,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["reader",{"_index":874,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["reader.onloadend",{"_index":879,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["reader.readasdataurl(event.target.files[0",{"_index":876,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["reader.result.tostring",{"_index":885,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["readme",{"_index":1068,"title":{},"body":{"index.html":{}}}],["red",{"_index":485,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["redir",{"_index":766,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redir(img",{"_index":807,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["redirecting",{"_index":809,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["redirectto",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["reflects",{"_index":795,"title":{},"body":{"components/ProfileComponent.html":{}}}],["register",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["register(user",{"_index":224,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["register.component.css",{"_index":353,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":352,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["register.service",{"_index":350,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":54,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerdata",{"_index":392,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["registerdata.confpassword",{"_index":400,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["registerdata.password",{"_index":399,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["registerdata.phonenum",{"_index":407,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["registerdata.userid",{"_index":406,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["registers",{"_index":227,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["registerservice",{"_index":349,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["registration",{"_index":266,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Gender.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["registrationform",{"_index":355,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["reload",{"_index":1042,"title":{},"body":{"index.html":{}}}],["remember",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{}}}],["rememberme",{"_index":575,"title":{},"body":{"components/LoginComponent.html":{}}}],["remove",{"_index":935,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["repeat",{"_index":728,"title":{},"body":{"components/PostComponent.html":{}}}],["request",{"_index":184,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["request(method",{"_index":228,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["require",{"_index":1003,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":446,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["res.title",{"_index":450,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.uname",{"_index":451,"title":{},"body":{"components/HomeComponent.html":{}}}],["reset",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":259,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["result",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{},"dependencies.html":{},"classes/formDat.html":{},"index.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/searchResult.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{},"dependencies.html":{},"classes/formDat.html":{},"index.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/searchResult.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":203,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["retrieving",{"_index":645,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["return",{"_index":158,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["returns",{"_index":155,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["rgb(0",{"_index":481,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["rgb(0,0,0",{"_index":731,"title":{},"body":{"components/PostComponent.html":{}}}],["rgb(137",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["rgba(0,0,0",{"_index":733,"title":{},"body":{"components/PostComponent.html":{}}}],["rgba(186,71,186,0.62",{"_index":746,"title":{},"body":{"components/PostComponent.html":{}}}],["rgba(255",{"_index":491,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(35",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["right",{"_index":564,"title":{},"body":{"components/HomeComponent.html":{}}}],["roboto",{"_index":535,"title":{},"body":{"components/HomeComponent.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["root'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["rotate",{"_index":706,"title":{},"body":{"components/PostComponent.html":{}}}],["rotate(0deg",{"_index":703,"title":{},"body":{"components/PostComponent.html":{}}}],["rotate(1deg",{"_index":711,"title":{},"body":{"components/PostComponent.html":{}}}],["router",{"_index":189,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["routermodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routes",{"_index":89,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":369,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["routing.module",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1037,"title":{},"body":{"index.html":{}}}],["running",{"_index":1056,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["samrat",{"_index":466,"title":{},"body":{"components/HomeComponent.html":{}}}],["sans",{"_index":539,"title":{},"body":{"components/HomeComponent.html":{}}}],["save",{"_index":938,"title":{},"body":{"components/ProfileComponent.html":{}}}],["saved",{"_index":774,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["savepost",{"_index":307,"title":{},"body":{"injectables/DiaryService.html":{}}}],["savepost(data",{"_index":323,"title":{},"body":{"injectables/DiaryService.html":{}}}],["saves",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["savetoken",{"_index":185,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["savetoken(token",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["saving",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["scaffolding",{"_index":1045,"title":{},"body":{"index.html":{}}}],["scale",{"_index":725,"title":{},"body":{"components/PostComponent.html":{}}}],["search",{"_index":426,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["searched",{"_index":418,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["searches",{"_index":432,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["searchresult",{"_index":439,"title":{"classes/searchResult.html":{}},"body":{"components/HomeComponent.html":{},"coverage.html":{},"classes/searchResult.html":{}}}],["searchtext",{"_index":422,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["searchtitle",{"_index":423,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["seconds",{"_index":694,"title":{},"body":{"components/PostComponent.html":{}}}],["segoe",{"_index":533,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["selenium",{"_index":827,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["send",{"_index":231,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["serif",{"_index":540,"title":{},"body":{"components/HomeComponent.html":{}}}],["serve",{"_index":1038,"title":{},"body":{"index.html":{}}}],["server",{"_index":232,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"index.html":{}}}],["serveruri",{"_index":176,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["service",{"_index":263,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["set",{"_index":872,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["shadow",{"_index":483,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["shake",{"_index":690,"title":{},"body":{"components/PostComponent.html":{}}}],["situation",{"_index":235,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["size",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["snackbar",{"_index":759,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["social",{"_index":515,"title":{},"body":{"components/HomeComponent.html":{}}}],["software",{"_index":456,"title":{},"body":{"components/HomeComponent.html":{}}}],["solid",{"_index":549,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{}}}],["soumyadeep",{"_index":469,"title":{},"body":{"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"index.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["span')).gettext",{"_index":163,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specified",{"_index":950,"title":{},"body":{"components/ProfileComponent.html":{}}}],["specify",{"_index":955,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src",{"_index":949,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authentication.service.ts",{"_index":169,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{}}}],["src/app/authentication.service.ts:104",{"_index":230,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication.service.ts:130",{"_index":225,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication.service.ts:137",{"_index":217,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication.service.ts:143",{"_index":223,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication.service.ts:149",{"_index":221,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication.service.ts:43",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication.service.ts:44",{"_index":190,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication.service.ts:56",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication.service.ts:64",{"_index":202,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication.service.ts:73",{"_index":206,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication.service.ts:90",{"_index":211,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/diary.service.ts",{"_index":303,"title":{},"body":{"injectables/DiaryService.html":{},"coverage.html":{}}}],["src/app/diary.service.ts:15",{"_index":308,"title":{},"body":{"injectables/DiaryService.html":{}}}],["src/app/diary.service.ts:23",{"_index":326,"title":{},"body":{"injectables/DiaryService.html":{}}}],["src/app/diary.service.ts:42",{"_index":321,"title":{},"body":{"injectables/DiaryService.html":{}}}],["src/app/diary.service.ts:50",{"_index":317,"title":{},"body":{"injectables/DiaryService.html":{}}}],["src/app/diary.service.ts:58",{"_index":312,"title":{},"body":{"injectables/DiaryService.html":{}}}],["src/app/home/home.component.ts",{"_index":416,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"classes/searchResult.html":{}}}],["src/app/home/home.component.ts:10",{"_index":1081,"title":{},"body":{"classes/searchResult.html":{}}}],["src/app/home/home.component.ts:11",{"_index":1086,"title":{},"body":{"classes/searchResult.html":{}}}],["src/app/home/home.component.ts:12",{"_index":1085,"title":{},"body":{"classes/searchResult.html":{}}}],["src/app/home/home.component.ts:13",{"_index":1083,"title":{},"body":{"classes/searchResult.html":{}}}],["src/app/home/home.component.ts:14",{"_index":1082,"title":{},"body":{"classes/searchResult.html":{}}}],["src/app/home/home.component.ts:15",{"_index":1084,"title":{},"body":{"classes/searchResult.html":{}}}],["src/app/home/home.component.ts:30",{"_index":436,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:31",{"_index":425,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:41",{"_index":430,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:46",{"_index":431,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":570,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:17",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:18",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/post/post.component.ts",{"_index":636,"title":{},"body":{"components/PostComponent.html":{},"coverage.html":{},"classes/jsonImage.html":{}}}],["src/app/post/post.component.ts:10",{"_index":1070,"title":{},"body":{"classes/jsonImage.html":{}}}],["src/app/post/post.component.ts:22",{"_index":650,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:23",{"_index":652,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:24",{"_index":655,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:25",{"_index":651,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:26",{"_index":654,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:27",{"_index":653,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:28",{"_index":643,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:38",{"_index":647,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:9",{"_index":1069,"title":{},"body":{"classes/jsonImage.html":{}}}],["src/app/profile/profile.component.ts",{"_index":748,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["src/app/profile/profile.component.ts:109",{"_index":810,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:119",{"_index":784,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:141",{"_index":797,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:162",{"_index":805,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:171",{"_index":801,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:20",{"_index":1024,"title":{},"body":{"classes/formDat.html":{}}}],["src/app/profile/profile.component.ts:206",{"_index":808,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:21",{"_index":1029,"title":{},"body":{"classes/formDat.html":{}}}],["src/app/profile/profile.component.ts:217",{"_index":782,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:22",{"_index":1027,"title":{},"body":{"classes/formDat.html":{}}}],["src/app/profile/profile.component.ts:23",{"_index":1028,"title":{},"body":{"classes/formDat.html":{}}}],["src/app/profile/profile.component.ts:237",{"_index":778,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:24",{"_index":1025,"title":{},"body":{"classes/formDat.html":{}}}],["src/app/profile/profile.component.ts:25",{"_index":1026,"title":{},"body":{"classes/formDat.html":{}}}],["src/app/profile/profile.component.ts:254",{"_index":787,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:262",{"_index":790,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:27",{"_index":1023,"title":{},"body":{"classes/formDat.html":{}}}],["src/app/profile/profile.component.ts:53",{"_index":1072,"title":{},"body":{"classes/jsonResponse.html":{}}}],["src/app/profile/profile.component.ts:54",{"_index":1071,"title":{},"body":{"classes/jsonResponse.html":{}}}],["src/app/profile/profile.component.ts:72",{"_index":824,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:73",{"_index":815,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:74",{"_index":816,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:75",{"_index":820,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:76",{"_index":821,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:77",{"_index":812,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:78",{"_index":813,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:79",{"_index":814,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:80",{"_index":823,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:81",{"_index":819,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:83",{"_index":770,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:93",{"_index":822,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":341,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:26",{"_index":964,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":963,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:28",{"_index":961,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:29",{"_index":960,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:35",{"_index":962,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:39",{"_index":957,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:66",{"_index":958,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:75",{"_index":959,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":998,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1001,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1002,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":689,"title":{},"body":{"components/PostComponent.html":{}}}],["started",{"_index":1030,"title":{"index.html":{}},"body":{}}],["state",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{}}}],["statements",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":437,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["stored",{"_index":1050,"title":{},"body":{"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["strucutre",{"_index":367,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["style",{"_index":513,"title":{},"body":{"components/HomeComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["submission",{"_index":386,"title":{},"body":{"interfaces/Gender.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["submitted",{"_index":403,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["support",{"_index":1073,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1074,"title":{},"body":{"modules.html":{}}}],["system",{"_index":531,"title":{},"body":{"components/HomeComponent.html":{}}}],["table",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":464,"title":{},"body":{"components/HomeComponent.html":{}}}],["technology",{"_index":462,"title":{},"body":{"components/HomeComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["test",{"_index":1059,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1058,"title":{},"body":{"index.html":{}}}],["text",{"_index":541,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{}}}],["thakur",{"_index":470,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._id",{"_index":844,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.auth.register(this.credentials).subscribe",{"_index":411,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.getuserdetails().uname",{"_index":863,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.authservice.isloggedin",{"_index":860,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.authservice.login(this.credentials).subscribe",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.base64image",{"_index":884,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.checked",{"_index":914,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.checked).subscribe((res",{"_index":906,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.credentials",{"_index":405,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.datepipe.transform(new",{"_index":897,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.diaryservice.deletepost(this.username",{"_index":932,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.diaryservice.fetchimagebase64(this.uname",{"_index":679,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["this.diaryservice.getposts(this.username).subscribe((res",{"_index":864,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.diaryservice.savepost(postdata",{"_index":905,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.editordata",{"_index":895,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.formbuilder.group",{"_index":376,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.gen",{"_index":391,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["this.gen).subscribe",{"_index":409,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["this.gettoken",{"_index":273,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["this.getuserdetails",{"_index":279,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["this.http.get(`${this.serveruri}/${type",{"_index":288,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["this.http.get(`${this.serveruri}/posts/img?uname",{"_index":337,"title":{},"body":{"injectables/DiaryService.html":{}}}],["this.http.get(`${this.serveruri}/posts/view?uname",{"_index":336,"title":{},"body":{"injectables/DiaryService.html":{}}}],["this.http.post(`${this.serveruri}/${type",{"_index":287,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["this.http.post(`${this.serveruri}/posts/add",{"_index":335,"title":{},"body":{"injectables/DiaryService.html":{}}}],["this.http.post(`${this.serveruri}/posts/remove",{"_index":339,"title":{},"body":{"injectables/DiaryService.html":{}}}],["this.id",{"_index":668,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["this.id).subscribe",{"_index":680,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["this.image",{"_index":845,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.imgpath",{"_index":666,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["this.isprivate",{"_index":846,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.issubmitted",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.issumbitted",{"_index":383,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["this.link",{"_index":848,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.loadpostsdata",{"_index":859,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.loginform",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.model.editordata",{"_index":931,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.myurl",{"_index":663,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["this.opensnackbar(postdata.title",{"_index":924,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.path",{"_index":847,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.post",{"_index":674,"title":{},"body":{"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["this.postform",{"_index":855,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.postform.get('avatar').setvalue(file",{"_index":889,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.postlist",{"_index":870,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.postlist.push(new",{"_index":911,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.queryservice.query(this.searchtext).subscribe((res",{"_index":444,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["this.registerservice.adduser(registerdata.userid",{"_index":408,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["this.registrationform",{"_index":375,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["this.rememberme",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.request('get",{"_index":300,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["this.request('post",{"_index":299,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["this.results",{"_index":445,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["this.router.navigate(['/login",{"_index":410,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/profile",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":861,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.router.navigatebyurl('/login",{"_index":302,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["this.savetoken(data.token",{"_index":297,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["this.searchtext",{"_index":443,"title":{},"body":{"components/HomeComponent.html":{},"classes/searchResult.html":{}}}],["this.snackbar.open(message",{"_index":890,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.timestamp",{"_index":672,"title":{},"body":{"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["this.tit",{"_index":930,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.title",{"_index":670,"title":{},"body":{"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["this.token",{"_index":270,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["this.uname",{"_index":676,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["this.username",{"_index":862,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["this.verifyloggedin",{"_index":858,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["thisid",{"_index":893,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["through",{"_index":370,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["time",{"_index":838,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["timestamp",{"_index":324,"title":{},"body":{"injectables/DiaryService.html":{},"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["timestamp:string",{"_index":661,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["tit",{"_index":760,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/DiaryService.html":{},"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["title).subscribe",{"_index":933,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["title:string",{"_index":660,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["tmppath",{"_index":918,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["token",{"_index":178,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["token.split('.')[1",{"_index":275,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["tokenpayload",{"_index":216,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{}}}],["tokenresponse",{"_index":261,"title":{"interfaces/TokenResponse.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{}}}],["top",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PostComponent.html":{}}}],["transform",{"_index":542,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{}}}],["transition",{"_index":567,"title":{},"body":{"components/HomeComponent.html":{}}}],["translate",{"_index":704,"title":{},"body":{"components/PostComponent.html":{}}}],["translate(1px",{"_index":702,"title":{},"body":{"components/PostComponent.html":{}}}],["translate(3px",{"_index":713,"title":{},"body":{"components/PostComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["true",{"_index":398,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":865,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{},"miscellaneous/variables.html":{}}}],["uer",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["ui",{"_index":534,"title":{},"body":{"components/HomeComponent.html":{}}}],["ul",{"_index":511,"title":{},"body":{"components/HomeComponent.html":{}}}],["uname",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/jsonImage.html":{},"classes/searchResult.html":{}}}],["uname+'&id",{"_index":338,"title":{},"body":{"injectables/DiaryService.html":{}}}],["unit",{"_index":1057,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":447,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["unused",{"_index":868,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["upload",{"_index":799,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["uploads",{"_index":802,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["uppercase",{"_index":543,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":310,"title":{},"body":{"injectables/DiaryService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["url(\"photographer.jpg",{"_index":718,"title":{},"body":{"components/PostComponent.html":{}}}],["url('../../assets/images/home/diary.png",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["url(this.myurl",{"_index":665,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["url({{pst.path",{"_index":940,"title":{},"body":{"components/ProfileComponent.html":{}}}],["url.searchparams.get('id",{"_index":669,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["url.searchparams.get('imgpath",{"_index":667,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["url.searchparams.get('post",{"_index":675,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["url.searchparams.get('timestamp",{"_index":673,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["url.searchparams.get('title",{"_index":671,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["url.searchparams.get('uname",{"_index":677,"title":{},"body":{"components/PostComponent.html":{},"classes/jsonImage.html":{}}}],["use",{"_index":952,"title":{},"body":{"components/ProfileComponent.html":{},"index.html":{}}}],["used",{"_index":218,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["user",{"_index":208,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["user.exp",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["user/add",{"_index":229,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["userdetails",{"_index":210,"title":{"interfaces/UserDetails.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"coverage.html":{}}}],["userid",{"_index":377,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["username",{"_index":314,"title":{},"body":{"injectables/DiaryService.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["users",{"_index":852,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["v1",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["validators",{"_index":347,"title":{},"body":{"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["validity",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{},"classes/searchResult.html":{}}}],["variable",{"_index":389,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["variables",{"_index":192,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/DiaryService.html":{},"interfaces/Gender.html":{},"components/HomeComponent.html":{},"components/PostComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{},"classes/jsonImage.html":{},"classes/searchResult.html":{},"miscellaneous/variables.html":{}}}],["verifies",{"_index":811,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["verifyloggedin",{"_index":767,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["version",{"_index":1034,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":561,"title":{},"body":{"components/HomeComponent.html":{}}}],["via",{"_index":1061,"title":{},"body":{"index.html":{}}}],["viewvalue",{"_index":343,"title":{},"body":{"interfaces/Gender.html":{},"components/RegisterComponent.html":{}}}],["visibility",{"_index":509,"title":{},"body":{"components/HomeComponent.html":{}}}],["visible",{"_index":510,"title":{},"body":{"components/HomeComponent.html":{}}}],["void",{"_index":222,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["w/opacity/see",{"_index":736,"title":{},"body":{"components/PostComponent.html":{}}}],["want",{"_index":954,"title":{},"body":{"components/ProfileComponent.html":{}}}],["web",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["webdriver/http",{"_index":828,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["webkit",{"_index":724,"title":{},"body":{"components/PostComponent.html":{}}}],["webpage",{"_index":200,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["webpages",{"_index":429,"title":{},"body":{"components/HomeComponent.html":{},"components/PostComponent.html":{},"classes/jsonImage.html":{},"classes/searchResult.html":{}}}],["welcome",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["wherever",{"_index":953,"title":{},"body":{"components/ProfileComponent.html":{}}}],["whether",{"_index":842,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["white",{"_index":737,"title":{},"body":{"components/PostComponent.html":{}}}],["width",{"_index":523,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["window.atob(payload",{"_index":276,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["window.localstorage.removeitem('mean",{"_index":301,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserDetails.html":{}}}],["window.location.href",{"_index":664,"title":{},"body":{"components/PostComponent.html":{},"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonImage.html":{},"classes/jsonResponse.html":{}}}],["working",{"_index":922,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["works",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":818,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["y",{"_index":900,"title":{},"body":{"components/ProfileComponent.html":{},"classes/formDat.html":{},"classes/jsonResponse.html":{}}}],["yes",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["z",{"_index":740,"title":{},"body":{"components/PostComponent.html":{}}}],["zone.js",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Component which is at the top of the hierrarchy\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MyDiary-v1'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * Component which is at the top of the hierrarchy\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MyDiary-v1';\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPostComponent\n\nPostComponent\n\nAppModule -->\n\nPostComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nDiaryService\n\nDiaryService\n\nAppModule -->\n\nDiaryService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PostComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            DiaryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AuthenticationService } from './authentication.service';\nimport { ProfileGuardService } from './profile-guard.service';\n\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSelectModule} from '@angular/material/select';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { PostComponent } from './post/post.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatSnackBarModule} from '@angular/material';\nimport {MatDividerModule} from '@angular/material/divider';\n\n\nimport {DatePipe} from '@angular/common';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { DiaryService } from './diary.service';\nimport { QueryService } from './query.service';\nimport { CKEditorModule } from 'ckeditor4-angular';\n\nconst routes: Routes = [\n  { path: 'register', component: RegisterComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent},\n  { path: 'profile', component: ProfileComponent, canActivate: [ProfileGuardService] },\n  { path: '', redirectTo: 'home', pathMatch: 'full' }\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    PostComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    FormsModule,\n    MatSelectModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    NgbModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatDividerModule,\n    CKEditorModule,\n    MatExpansionModule,\n    RouterModule.forRoot(routes) // I don't know how this works\n  ],\n  providers: [AuthenticationService, ProfileGuardService, DiaryService, QueryService, DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component'\nimport { LoginComponent } from './login/login.component'\nimport { RegisterComponent } from './register/register.component'\nimport { ProfileComponent } from './profile/profile.component'\nimport { PostComponent } from './post/post.component'\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'post', component: PostComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Decorator that marks a class as available to be provided and injected as a dependency\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                serverUri\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getToken\n                            \n                            \n                                    Public\n                                getUserDetails\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                profile\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Private\n                                request\n                            \n                            \n                                    Private\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication.service.ts:44\n                            \n                        \n\n                \n                    \n                            Constructor to initialize variables\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                http address\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Helps in moving from one webpage to another\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication.service.ts:64\n                \n            \n\n\n            \n                \n                    Retrieves token from local memory\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication.service.ts:73\n                \n            \n\n\n            \n                \n                    Fetches user details\n\n\n                    \n                        Returns :         UserDetails\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication.service.ts:90\n                \n            \n\n\n            \n                \n                    Checks if user is logged in\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication.service.ts:137\n                \n            \n\n\n            \n                \n                    Used when user logs in\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token of user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication.service.ts:149\n                \n            \n\n\n            \n                \n                    logs out user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            profile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    profile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication.service.ts:143\n                \n            \n\n\n            \n                \n                    Fetches user profile\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication.service.ts:130\n                \n            \n\n\n            \n                \n                    Used when new user registers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token of user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: \"post\" | \"get\", type: \"login\" | \"user/add\" | \"profile\", user?: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication.service.ts:104\n                \n            \n\n\n            \n                \n                    Used to send request to server\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            \"post\" | \"get\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        post or get http method being used\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                            \"login\" | \"user/add\" | \"profile\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        situation when it is used\n\n                                    \n                                \n                                \n                                    user\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Token of user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/authentication.service.ts:56\n                \n            \n\n\n            \n                \n                    Used for saving JSON web token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Saves JSON Web Token in local memory\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication.service.ts:43\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n/**\n * Interface carrying uer details\n */\nexport interface UserDetails {\n  _id: string;\n  uname: string;\n  pass?: string;\n  phone?: string;\n  gender?: string;\n  exp: number;\n  iat: number;\n}\n/**\n * Interface for JSON Web Token Response from backend\n */\ninterface TokenResponse {\n  token: string;\n}\n/**\n * Interface to pass user info\n */\nexport interface TokenPayload {\n  uname: string;\n  pass: string;\n  phone?: string;\n  gender?: string;\n}\n/**\n * Decorator that marks a class as available to be provided and injected as a dependency\n */\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service class that handles authentication of user, user registration and login\n */\nexport class AuthenticationService {\n  private token: string;\n  serverUri = 'http://localhost:3000';\n  /**\n   * Constructor to initialize variables\n   * @param http http address\n   * @param router Helps in moving from one webpage to another\n   */\n  constructor(private http: HttpClient, private router: Router) {}\n\n  /**\n   * Used for saving JSON web token\n   * @param token Saves JSON Web Token in local memory\n   */\n  private saveToken(token: string) {\n    localStorage.setItem('mean-token', token);\n    this.token = token;\n    console.log('Token: ' + localStorage.getItem('mean-token'));\n  }\n/**\n * Retrieves token from local memory\n */\n  private getToken() {\n    if (!this.token) {\n      this.token = localStorage.getItem('mean-token');\n    }\n    return this.token;\n  }\n/**\n * Fetches user details\n */\n  public getUserDetails(): UserDetails {\n    const token = this.getToken();\n    let payload;\n    if (token) {\n      payload = token.split('.')[1];\n      console.log('Token details: ' + payload);\n      payload = window.atob(payload);\n      console.log('Token details: ' + payload);\n      console.log('Token details: ' + payload);\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n/**\n * Checks if user is logged in\n */\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n/**\n * Used to send request to server\n * @param method post or get http method being used\n * @param type situation when it is used\n * @param user Token of user\n */\n  private request(method: 'post'|'get', type: 'login'|'user/add'|'profile', user?: TokenPayload): Observable {\n    let base;\n\n    if (method === 'post') {\n      base = this.http.post(`${this.serverUri}/${type}`, user);\n    } else {\n      base = this.http.get(`${this.serverUri}/${type}`, { headers: { Authorization: `Bearer ${this.getToken()}` }});\n    }\n    console.log(base);\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if (data.token) {\n          console.log('Data.Token:' + data.token);\n          this.saveToken(data.token);\n          let a = this.getUserDetails();\n        }\n        return data;\n      })\n    );\n\n    return request;\n  }\n/**\n * Used when new user registers\n * @param user Token of user\n */\n  public register(user: TokenPayload): Observable {\n    return this.request('post', 'user/add', user);\n  }\n/**\n * Used when user logs in\n * @param user Token of user\n */\n  public login(user: TokenPayload): Observable {\n    return this.request('post', 'login', user);\n  }\n/**\n * Fetches user profile\n */\n  public profile(): Observable {\n    return this.request('get', 'profile');\n  }\n/**\n * logs out user\n */\n  public logout(): void {\n    this.token = '';\n    window.localStorage.removeItem('mean-token');\n    this.router.navigateByUrl('/login');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiaryService.html":{"url":"injectables/DiaryService.html","title":"injectable - DiaryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DiaryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/diary.service.ts\n        \n\n            \n                Description\n            \n            \n                Decorator that marks a class as available to be provided and injected as a dependency\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                serverUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletePost\n                            \n                            \n                                fetchImageBase64\n                            \n                            \n                                getPosts\n                            \n                            \n                                savePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/diary.service.ts:15\n                            \n                        \n\n                \n                    \n                            constructor to initialize variables\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Address of httpclient\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Helps to navigate from one url to another\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePost\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePost(uname, title)\n                \n            \n\n\n            \n                \n                    Defined in src/app/diary.service.ts:58\n                \n            \n\n\n            \n                \n                    Used when user wants to delete a post\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username\n\n                                    \n                                \n                                \n                                    title\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Title of post\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchImageBase64\n                        \n                        \n                    \n                \n            \n            \n                \nfetchImageBase64(uname, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/diary.service.ts:50\n                \n            \n\n\n            \n                \n                    Fetches image if loaded by user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username\n\n                                    \n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID of user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetPosts(uname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/diary.service.ts:42\n                \n            \n\n\n            \n                \n                    fetches user posts \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username of user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            savePost\n                        \n                        \n                    \n                \n            \n            \n                \nsavePost(data, uname, image, timestamp, pvt)\n                \n            \n\n\n            \n                \n                    Defined in src/app/diary.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    image\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timestamp\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pvt\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/diary.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n/**\n * Decorator that marks a class as available to be provided and injected as a dependency\n */\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Class to deploy diary service\n */\nexport class DiaryService {\n  serverUri = 'http://localhost:3000';\n  /**\n   * constructor to initialize variables\n   * @param http Address of httpclient\n   * @param router Helps to navigate from one url to another\n   */\n  constructor(private http: HttpClient, private router: Router) { }\n\n  savePost(data, uname, image, timestamp, pvt) {\n    const postData = {\n      uname: uname,\n      title: data.title,\n      post: data.post,\n      img: image,\n      timestamp: timestamp,\n      private: pvt\n\n    };\n    //console.log(`${this.serverUri}/posts/add`);\n    console.log(postData);\n    return this.http.post(`${this.serverUri}/posts/add`, postData);\n\n  }\n  /**\n   * fetches user posts \n   * @param uname Username of user\n   */\n  getPosts(uname) {\n    return this.http.get(`${this.serverUri}/posts/view?uname=` + uname);\n  }\n  /**\n   * Fetches image if loaded by user\n   * @param uname Username\n   * @param id ID of user\n   */\n  fetchImageBase64(uname, id) {\n    return this.http.get(`${this.serverUri}/posts/img?uname=` + uname+'&id=' + id);\n  }\n  /**\n   * Used when user wants to delete a post\n   * @param uname Username\n   * @param title Title of post\n   */\n  deletePost(uname, title)\n  {\n    const postData = {\n      uname: uname,\n      title: title\n    }\n    return this.http.post(`${this.serverUri}/posts/remove`, postData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Gender.html":{"url":"interfaces/Gender.html","title":"interface - Gender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Gender\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/register/register.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface to manage gender of user\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { RegisterService } from '../register.service';\nimport { Router } from '@angular/router';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\n\n/**\n * Interface to manage gender of user\n */\nexport interface Gender {\n  value: string;\n  viewValue: string;\n}\n/**\n * Component handling registration of user\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n/**\n * Class to register new user\n */\nexport class RegisterComponent implements OnInit {\n  registrationForm;\n  isSumbitted: boolean;\n  gen: string;\n  credentials: TokenPayload = {\n    uname: '',\n    pass: '',\n    phone: '',\n    gender: ''\n  };\n  genders: Gender[] = [\n    {value: 'female', viewValue: 'Female'},\n    {value: 'male', viewValue: 'Male'},\n    {value: 'other', viewValue: 'Other'}\n  ];\n\n  /**\n * Constructor to  initialize variables\n * @param formBuilder the form obejct used while logging in to create complex strucutre\n * @param registerService indicates registration\n * @param router this helps in routing through different components\n * @param auth object used for authenticating user \n */\n  constructor(private formBuilder: FormBuilder, private registerService: RegisterService, private router: Router, private auth: AuthenticationService) {\n      this.registrationForm = this.formBuilder.group({\n        userId: '',\n        password: '',\n        confpassword: '',\n        phonenum: '',\n      });\n  }\n/**\n * @ignore\n */\n  ngOnInit() {\n    this.isSumbitted = false;\n  }\n/**\n * Function checks integrity of submission\n * @param event event listener variable\n */\n  onSelect(event){\n    if (this.isSumbitted === false) {\n      this.gen = event;\n    }\n  }\n/**\n * Function to register data\n * @param registerData Contains registration data by user\n */\n  onSubmit(registerData) {\n    // Process checkout data here\n\n    this.isSumbitted = true;\n    if (registerData.password === registerData.confpassword) {\n      console.log('Your order has been submitted', registerData);\n      console.log('Gender:', this.gen);\n      this.credentials = {\n        uname: registerData.userId,\n        pass: registerData.password,\n        phone: registerData.phonenum,\n        gender: this.gen\n      };\n      //this.registerService.addUser(registerData.userId, registerData.password, registerData.phonenum, this.gen).subscribe(() => {\n        //this.router.navigate(['/login']);\n\n      //});\n      this.auth.register(this.credentials).subscribe(() => {\n        this.router.navigate(['/login']);\n      }, (err) => {\n        console.error(err);\n      });\n    } else {\n      alert('Inconsistent passwords !!');\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display searched query results\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                results\n                            \n                            \n                                searchText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                searchTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor to initialize variables\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                    QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage query search from backend\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                helps in connecting multiple webpages\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:41\n                \n            \n\n\n            \n                \n                    Some function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsearchTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:46\n                \n            \n\n\n            \n                \n                    Searches a database based on title in a query\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { QueryService } from '../query.service';\nimport { Router } from '@angular/router';\n\n/**\n * Class to store fetched data\n */\nexport class searchResult {\n  _id?;\n  uname: string;\n  title: string;\n  post: string;\n  link: string;\n  timestamp: string;\n}\n\n/**\n * Component to display searched query results\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n/**\n * Class handling searched queries\n */\nexport class HomeComponent implements OnInit {\n  searchText: string;\n  results: Array;\n  /**\n   * Constructor to initialize variables\n   * @param queryService service to manage query search from backend\n   * @param router helps in connecting multiple webpages\n   */\n  constructor(private queryService: QueryService, private router: Router) { }\n/**\n * Some function\n */\n  ngOnInit() {\n  }\n  /**\n   * Searches a database based on title in a query\n   */\n  searchTitle(){\n    //Search for this string\n    //alert(\"Search Title: \"+this.searchText);\n    this.queryService.query(this.searchText).subscribe((res: Response) => {\n      this.results = res as unknown as Array;\n      for (var _i = 0; _i \n    \n\n    \n        \n  My Diary\n  \n  \n  \n  \n  \n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n      \n        \n          My Diary\n        \n        \n          Home\n          Login\n          Register\n          My Profile\n        \n      \n    \n  \n\n     \n    \n        \n          Search Post\n       \n      \n      \n\n\n\n\nTop Search Results:\n\n\n\n\n\n\n  \n    \n    {{res.title}}\n      By: {{res.uname}}\n    \n  \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n  \n      \n      \n  \n        \n        \n  \n          \n          About Us\n          This is done as part of the course project for Software Lab CS 699\n          Indian Institute of Technology, Mumbai.\n        \n        \n\n        \n        \n  \n  \n            Team Members:\n            Samrat Dutta : 193050026\n            Soumyadeep Thakur : 193050033\n            Aakash Banerjee : 193050034\n          \n          \n        \n  \n        \n       \n        \n  \n      \n      \n  \n    \n    \n  \n\n  \n    \n  \n    \n    \n      \n        \n           \n        \n      \n      \n        \n           \n        \n      \n      \n        \n           \n        \n      \n      \n        \n           \n        \n      \n      \n        \n           \n        \n      \n    \n    \n  \n    \n    © 2018 Copyright:\n       MDBootstrap.com\n    \n    \n  \n  \n  \n    \n\n    \n                \n                    ./home.component.css\n                \n                .navbar-default {\n    background-color: rgb(0, 0, 0);\n    box-shadow: 0 0 5px red;\n   }\n\n\n\n\n\n   .context-dark, .bg-gray-dark, .bg-primary {\n    color: rgba(255, 255, 255, 0.8);\n}\n\n.footer-classic a, .footer-classic a:focus, .footer-classic a:active {\n    color: #ffffff;\n}\n.nav-list li {\n    padding-top: 5px;\n    padding-bottom: 5px;\n}\n\n.nav-list li a:hover:before {\n    margin-left: 0;\n    opacity: 1;\n    visibility: visible;\n}\n\nul, ol {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\n\n.social-inner {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    padding: 23px;\n    font: 900 13px/1 \"Lato\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n    text-transform: uppercase;\n    color: rgba(255, 255, 255, 0.5);\n}\n.social-container .col {\n    border: 1px solid rgba(255, 255, 255, 0.1);\n}\n.nav-list li a:before {\n    content: \"\\f14f\";\n    font: 400 21px/1 \"Material Design Icons\";\n    color: #4d6de6;\n    display: inline-block;\n    vertical-align: baseline;\n    margin-left: -28px;\n    margin-right: 7px;\n    opacity: 0;\n    visibility: hidden;\n    transition: .22s ease;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  My Diary                                        My Diary                          Home          Login          Register          My Profile                                               Search Post                   Top Search Results:          {{res.title}}      By: {{res.uname}}                                                                      About Us          This is done as part of the course project for Software Lab CS 699          Indian Institute of Technology, Mumbai.                                                Team Members:            Samrat Dutta : 193050026            Soumyadeep Thakur : 193050033            Aakash Banerjee : 193050034                                                                                                                                                                                                                                                                                                                    © 2018 Copyright:       MDBootstrap.com              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component handling login process\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                credentials\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                loginForm\n                            \n                            \n                                rememberMe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkCheckBoxvalue\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor to initialize parameters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the form obejct used while logging in to create complex strucutre\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                object used for authenticating user \n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this helps in routing through different components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCheckBoxvalue\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCheckBoxvalue(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:45\n                \n            \n\n\n            \n                \n                    Check if user had enabled remember me previously\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Passes the event when checkbox is clicked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(loginData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:55\n                \n            \n\n\n            \n                \n                    This function checks validity of user login data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loginData\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contains the user login data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenPayload\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    uname: '',\n    pass: ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSubmitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rememberMe\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\n/**\n * Component handling login process\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n/**\n * Class to implement login functionality\n */\nexport class LoginComponent implements OnInit {\n  rememberMe = false;  // State of remember me checkBox\n  credentials: TokenPayload = {\n    uname: '',\n    pass: ''\n  };\n  isSubmitted: boolean;\n  loginForm;\n  /**\n   * Constructor to initialize parameters\n   * @param formBuilder the form obejct used while logging in to create complex strucutre\n   * @param authService object used for authenticating user \n   * @param router this helps in routing through different components\n   */\n  constructor(private formBuilder: FormBuilder, private authService: AuthenticationService, private router: Router) {\n    this.loginForm = this.formBuilder.group({\n      login: '',\n      password: ''\n    });\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n/**\n * Check if user had enabled remember me previously\n * @param event Passes the event when checkbox is clicked\n */\n  checkCheckBoxvalue(event){\n    if (this.isSubmitted === false) {\n      this.rememberMe = !this.rememberMe;\n    }\n\n  }\n/**\n * This function checks validity of user login data\n * @param loginData contains the user login data\n */\n  onSubmit(loginData) {\n    // Process checkout data here\n    this.credentials = {\n      uname: loginData.login,\n      pass: loginData.password\n    };\n    this.isSubmitted = true;\n    console.log('Your order has been submitted', loginData);\n    console.log(this.rememberMe);\n    this.authService.login(this.credentials).subscribe(() => {\n      this.router.navigate(['/profile']);\n    }, (err) => {\n      console.error(err);\n    });\n    //this.authService.logout();\n  }\n\n\n}\n\n    \n\n    \n        \n        Login\n        \n        \n        \n        \n        \n      \n    \n    \n       \n        \n        \n          \n            \n              My Diary\n            \n            \n              Home\n              Login\n              Register\n              My Profile\n            \n          \n        \n        \n\n          \n          \n              \n                Welcome\n                Please Login to continue!\n              \n            \n\n            \n\n        \n          \n              \n                \n                Login\n                Enter Details\n              \n              \n                  \n\n                    \n                      \n                      \n                        \n                        \n                      \n                    \n\n                    \n                      \n                      \n                        \n                      \n\n                      \n                          Remember Me\n                         \n                          \n                      \n                    \n                   \n                    Login\n\n                  \n                \n            \n          \n                  \n      \n    \n    \n    \n      \n    \n    \n    \n      \n    \n    \n    \n\n    \n                \n                    ./login.component.css\n                \n                .navbar-default {\n    background-color: rgb(0, 0, 0);\n    box-shadow: 0 0 5px red;\n   }\n  \n\n   .example-card {\n    max-width: 400px;\n  }\n  \n  .example-header-image {\n    background-image: url('../../assets/images/home/diary.png');\n    background-size: cover;\n  }\n\n\n   .login_container {\n    height: 50%;\n    width: 80%;\n    margin-left: 10%;\n    box-shadow: 0 0 20px rgb(137, 235, 248);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(35, 143, 114, 0.521);\n    border-radius: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Login                                                                                                                 My Diary                                      Home              Login              Register              My Profile                                                                                        Welcome                Please Login to continue!                                                                                                      Login                Enter Details                                                                                                                                                                                                                                                                                                                                                                      Remember Me                                                                                                                                    Login                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"components/PostComponent.html":{"url":"components/PostComponent.html","title":"component - PostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/post/post.component.ts\n\n\n    \n        Description\n    \n    \n        Component to handle user posts\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post\n            \n\n            \n                styleUrls\n                ./post.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                imgpath\n                            \n                            \n                                myurl\n                            \n                            \n                                post\n                            \n                            \n                                timeStamp\n                            \n                            \n                                title\n                            \n                            \n                                uname\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(diaryService: DiaryService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/post/post.component.ts:28\n                            \n                        \n\n                \n                    \n                            constructor to initialize variables\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        diaryService\n                                                  \n                                                        \n                                                                        DiaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Handles posting and retrieving information\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Helps in connecting multiple webpages\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/post/post.component.ts:38\n                \n            \n\n\n            \n                \n                    Function to fetch data from database for display purpose\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imgpath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myurl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeStamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DiaryService } from '../diary.service';\n\n/**\n * exports JSON file containing image\n */\nexport class jsonImage {\n  _id?;\n  image: string;\n}\n/**\n * Component to handle user posts\n */\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\n\nexport class PostComponent implements OnInit {\n  id: string;\n  myurl:string;\n  uname: string;\n  imgpath:string;\n  title:string;\n  timeStamp:string;\n  post:string;\n  /**\n   * constructor to initialize variables\n   * @param diaryService Handles posting and retrieving information\n   * @param router Helps in connecting multiple webpages\n   */\n  constructor(private diaryService: DiaryService, private router: Router) { }\n/**\n * Function to fetch data from database for display purpose\n */\n  ngOnInit() {\n    this.myurl = window.location.href;\n    var url = new URL(this.myurl);\n    //this.imgpath = url.searchParams.get('imgpath');\n    this.id = url.searchParams.get('id');\n    this.title = url.searchParams.get('title');\n    this.timeStamp = url.searchParams.get('timeStamp');\n    this.post = url.searchParams.get('post');\n    this.uname = url.searchParams.get('uname');\n    console.log(this.id + ' ' + this.title + ' ' + this.timeStamp + ' ' + this.post);\n    this.diaryService.fetchImageBase64(this.uname, this.id).subscribe( (res: Response) => {\n      console.log(res);\n      var obj = res as unknown as jsonImage[];\n      console.log(obj);\n      this.imgpath = obj[0].image;\n    });\n    console.log(this.imgpath);\n  }\n\n}\n\n    \n\n    \n        \n        Profile\n        \n        \n        \n        \n        \n      \n\n\n      \n        \n        \n            \n              \n                My Diary\n              \n              \n                Home\n                Login\n                Register\n                My Profile\n              \n            \n          \n        \n          \n\n\n\n          \n\n          \n            {{title}}\n            {{timeStamp}}\n            \n            \n            Go Back\n          \n\n          \n\n    \n\n    \n                \n                    ./post.component.css\n                \n                .navbar-default {\n  \n    background-color: rgb(0, 0, 0);\n    box-shadow: 0 0 5px red;\n   }\n  \n\n   .disp:hover {\n    /* Start the shake animation and make the animation last for 0.5 seconds */\n    animation: shake 0.5s;\n  \n    /* When the animation is finished, start again */\n    animation-iteration-count: infinite;\n  }\n  \n  @keyframes shake {\n    0% { transform: translate(1px, 1px) rotate(0deg); }\n    10% { transform: translate(-1px, -2px) rotate(-1deg); }\n    20% { transform: translate(-3px, 0px) rotate(1deg); }\n    30% { transform: translate(3px, 2px) rotate(0deg); }\n    40% { transform: translate(1px, -1px) rotate(1deg); }\n    50% { transform: translate(-1px, 2px) rotate(-1deg); }\n    60% { transform: translate(-3px, 1px) rotate(0deg); }\n    70% { transform: translate(3px, 1px) rotate(-1deg); }\n    80% { transform: translate(-1px, -1px) rotate(1deg); }\n    90% { transform: translate(1px, 2px) rotate(0deg); }\n    100% { transform: translate(1px, -2px) rotate(-1deg); }\n  }\n\n\n\n  .bg-image {\n    /* The image used */\n    /*background-image: url(\"photographer.jpg\");*/\n  \n    /* Add the blur effect */\n    filter: blur(8px);\n    -webkit-filter: blur(8px);\n  \n    /* Full height */\n    height: 80%;\n    width: 100%;\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n  \n  /* Position text in the middle of the page/image */\n  .bg-text {\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0, 0.4); /* Black w/opacity/see-through */\n    color: white;\n    \n    border: 3px solid #f1f1f1;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 2;\n    width: 80%;\n    margin-top: 20%;\n    height:100%;\n    padding: 20px;\n    \n    -webkit-box-shadow: 8px 13px 46px 2px rgba(186,71,186,0.62);\n    -moz-box-shadow: 8px 13px 46px 2px rgba(186,71,186,0.62);\n    box-shadow: 8px 13px 46px 2px rgba(186,71,186,0.62);\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Profile                                                                                                              My Diary                                            Home                Login                Register                My Profile                                                                                      {{title}}            {{timeStamp}}                                    Go Back                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n    \n        Description\n    \n    \n        Component to handle user profile\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatarList\n                            \n                            \n                                base64Image\n                            \n                            \n                                checked\n                            \n                            \n                                closeResult\n                            \n                            \n                                editorData\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                postForm\n                            \n                            \n                                postList\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                tit\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletePost\n                            \n                            \n                                editPost\n                            \n                            \n                                loadPostsData\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                onFileChange\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openSnackBar\n                            \n                            \n                                redir\n                            \n                            \n                                verifyLoggedIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar, datePipe: DatePipe, formBuilder: FormBuilder, authService: AuthenticationService, diaryService: DiaryService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:83\n                            \n                        \n\n                \n                    \n                            Constructor for initializing parameters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                displays a message that the post has been saved\n\n                                                        \n                                                \n                                                \n                                                        datePipe\n                                                  \n                                                        \n                                                                        DatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                connects dependency\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the form obejct used while logging in to create complex strucutre\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this checks authentication of user information\n\n                                                        \n                                                \n                                                \n                                                        diaryService\n                                                  \n                                                        \n                                                                        DiaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service that handles posting and getting data\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this helps in routing through different components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePost\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePost(title)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:237\n                \n            \n\n\n            \n                \n                    Delets a post\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        title of post to be deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editPost\n                        \n                        \n                    \n                \n            \n            \n                \neditPost(title, post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:217\n                \n            \n\n\n            \n                \n                    Changes title of post\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Title of post \n\n                                    \n                                \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Post of user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPostsData\n                        \n                        \n                    \n                \n            \n            \n                \nloadPostsData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:119\n                \n            \n\n\n            \n                \n                    This function loads posted data by user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:254\n                \n            \n\n\n            \n                \n                    Implements user logout\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChange(event: CKEditor4.EventInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:262\n                \n            \n\n\n            \n                \n                    Function to capture change in text in the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            CKEditor4.EventInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any eveent which reflects change in text in editor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFileChange\n                        \n                        \n                    \n                \n            \n            \n                \nonFileChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:141\n                \n            \n\n\n            \n                \n                    Acts on event image upload\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        image upload event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(postData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:171\n                \n            \n\n\n            \n                \n                    Uploads post on submission\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    postData\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains data of post\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nopenSnackBar(message: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:162\n                \n            \n\n\n            \n                \n                    Displays the message\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message to be displayed\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            redir\n                        \n                        \n                    \n                \n            \n            \n                \nredir(img)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:206\n                \n            \n\n\n            \n                \n                    redirecting to another link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    img\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Image to be loaded\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verifyLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nverifyLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:109\n                \n            \n\n\n            \n                \n                    The function which verifies user credentials while logging in\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatarList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            base64Image\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checked\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n      editorData: 'Hello, world!'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postForm\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:93\n                            \n                        \n\n                \n                    \n                        displays a message that the post has been saved\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:72\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MatDividerModule} from '@angular/material/divider';\n\nimport {MatSnackBarModule} from '@angular/material';\nimport { MatSnackBar } from '@angular/material';\nimport { post } from 'selenium-webdriver/http';\nimport { AuthenticationService } from '../authentication.service';\nimport { DiaryService } from '../diary.service';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { CKEditor4 } from 'ckeditor4-angular/ckeditor';\n\n/**\n * Class which builds user profile \n */\nexport class formDat {\n  _id?;\n  title: string;\n  post: string;\n  timestamp: string;\n  image: string;\n  isPrivate: string; //CHANGED\n  // path;\n   link: string;\n   /**\n    * Constructor to initilize user parameters\n    * @param i contains user id\n    * @param a contains title of post\n    * @param b contains the actuals post\n    * @param c contains time when post was created by user\n    * @param d contains an image if user uploads one\n    * @param e contains whether post is private\n    */\n  constructor(i, a, b, c, d, e) { //CHANGED\n    this._id = i;\n    this.title = a;\n    this.post = b;\n    this.timestamp = c;\n    this.image = d;\n    this.isPrivate = e; //CHANGED\n    // this.path = path;\n    // this.link = '/post?imgpath=' + this.path + '&title=' + this.title + '&timeStamp=' + this.timeStamp + '&post=' + this.post;\n    \n  }\n}\n/**\n *JSON containing post and its ID \n */\nexport class jsonResponse {\n  post: string;\n  id: string;\n}\n/**\n * Component to handle user profile\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n/**\n * Class that handles all the functionalities of users profile\n */\nexport class ProfileComponent implements OnInit {\n\n    // userName = 'Demo User';\n\n\n    userName = '';\n    closeResult: string;\n    editorData;\n    postForm;\n    postList: Array = [];\n    avatarList: Array = [];\n    base64Image;\n    checked = false; //CHANGED \n    tit: string;\n    public model = {\n      editorData: 'Hello, world!'\n  };\n/**\n * Constructor for initializing parameters\n * @param snackBar displays a message that the post has been saved\n * @param datePipe connects dependency\n * @param formBuilder the form obejct used while logging in to create complex strucutre\n * @param authService this checks authentication of user information\n * @param diaryService service that handles posting and getting data\n * @param router this helps in routing through different components\n */\n    constructor(public snackBar: MatSnackBar, private datePipe: DatePipe,\n                private formBuilder: FormBuilder, private authService: AuthenticationService,\n                private diaryService: DiaryService, private router: Router) {\n\n      this.postForm = this.formBuilder.group({\n        title: '',\n        post: '',\n        avatarBase64: '',\n        avatar: ['']\n      });\n      this.verifyLoggedIn();\n      this.loadPostsData();\n    }\n/**\n * The function which verifies user credentials while logging in\n */\n    verifyLoggedIn() {\n      if (!this.authService.isLoggedIn()) {\n        this.router.navigate(['login']);\n      } else {\n        this.userName = this.authService.getUserDetails().uname;\n      }\n    }\n/**\n * This function loads posted data by user\n */\n    loadPostsData() {\n      this.diaryService.getPosts(this.userName).subscribe((res: Response) => {\n        // tslint:disable-next-line: no-unused-expression\n        console.log(res);\n        this.postList = res as unknown as formDat[];\n        // iterate and set link\n        for (var _i = 0; _i  {\n        console.error(err);\n      });\n    }\n    /**\n     * Acts on event image upload\n     * @param event image upload event\n     */\n    onFileChange(event) {\n      if (event.target.files.length > 0) {\n        const reader = new FileReader();\n\n        reader.readAsDataURL(event.target.files[0]); // read file as data url\n        console.log(reader);\n        reader.onloadend = () => { // called once readAsDataURL is completed\n        this.base64Image = reader.result.toString();\n        console.log(reader.result.toString().length);\n       };\n        const file = event.target.files[0];\n        console.log(file);\n        this.postForm.get('avatar').setValue(file);\n\n      }\n    }\n    /**\n     * Displays the message\n     * @param message message to be displayed\n     * @param action \n     */\n    openSnackBar(message: string, action: string) {\n      this.snackBar.open(message, action, {\n         duration: 2000,\n      });\n   }\n/**\n * Uploads post on submission\n * @param postData Contains data of post\n */\n    onSubmit(postData) {\n      // Process checkout data here\n      let thisId;\n      postData.post = this.editorData;\n      const medium = this.datePipe.transform(new Date(), 'MMM d, y, h:mm:ss a');\n      console.log(medium);\n      console.log(this.postList);\n      let id1;\n      this.diaryService.savePost(postData, this.userName, this.base64Image, medium, this.checked).subscribe((res: Response) => {\n        console.log('Subscribed');\n        console.log('Response');\n        console.log(res);\n        id1 = res as unknown as jsonResponse;\n        console.log(id1.id);\n        thisId = id1.id;\n      });\n      this.postList.push(new formDat(thisId, postData.title, postData.post, medium, this.base64Image, this.checked));   //CHANGED\n\n      \n\n      //console.log(this.base64Image);\n\n\n      // console.log('Your order has been submitted', postData);\n\n      // var fl = postData.avatar;\n      // var tmppath = \"./assets/images/tmp/\" + fl.name;  // Jst to check if working, image from database\n      // this.postList.push(new formDat(postData.title, postData.post, medium, tmppath));\n\n      this.openSnackBar(postData.title, 'Post Saved');\n    }\n    /**\n     *redirecting to another link\n     * @param img Image to be loaded\n     */\n    redir(img) {\n      window.location.href = '/post?img=' + img;\n      console.log('redirecting');\n      // location.replace(\"https://www.w3schools.com\")\n    }\n\n/**\n * Changes title of post\n * @param title Title of post \n * @param post Post of user\n */\n    editPost(title, post){\n      //alert(\"Edit Not Implemented Title: \"+title);\n      this.tit= title;\n      this.model.editorData = post;\n      this.diaryService.deletePost(this.userName, title).subscribe(() => {\n        var index = 0;\n        for (var i = 0; i  {\n        console.log('deleting');\n        //remove from arraylist too\n        var index = 0;\n        for (var i = 0; i \n    \n\n    \n        \n        Profile\n        \n        \n\n\n\n      \n\n    \n    \n    \n\n\n\n      \n\n\n      \n\n\n        \n            \n              \n                My Diary\n              \n              \n                Home\n                Login\n                Register\n                My Profile\n                \n              \n              \n                Logout\n              \n            \n          \n\n          \n\n\n\n\n          \n                \n                  Welcome\n                  {{userName}} \n                \n              \n\n              \n              \n\n\n\n              \n              \n                  \n                    \n                      \n\n                          \n\n                            \n                              \n                            \n                          \n                          \n\n\n                                \n                           \n                              \n                                 \n                              \n                            -->\n                            \n                          \n                            \n                          \n                           Keep Private? \n                          \n                          Save Post\n\n                        \n                      \n                  \n\n\n\n                  \n\n\n                    \n                        \n                          \n                            \n                                \n                              {{pst.title}}\n\n                            \n                          \n                          \n                              \n                                \n                                  .example-header-image {\n                                    background-image: url({{pst.path}});\n                                    background-size: 100px 100px;\n                                  }\n                                  \n                                \n                                {{pst.title}}\n                                {{pst.timeStamp}}\n                              \n                               not working with dynammic address-->\n                              \n                                  \n                                  \n                                  \n                                  \n                              \n                              \n                                  \n                                 Open Post\n                                Edit Post\n                                Delete Post\n                              \n                            \n                        \n                     \n\n\n                  \n\n                \n\n              \n\n              \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              \n    \n\n    \n                \n                    ./profile.component.css\n                \n                .navbar-default {\n  \n    background-color: rgb(0, 0, 0);\n    box-shadow: 0 0 5px red;\n   }\n  \n\n   .example-card {\n    max-width: 400px;\n  }\n  \n  .example-container {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .example-container > * {\n    width: 70%;\n  }\n\n  mat-card img{\n    object-fit: cover; /*this makes the image in src fit to the size specified below*/\n    width: 100%; /* Here you can use wherever you want to specify the width and also the height of the */\n    height: 80%;\n  }\n \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Profile                                                                                                My Diary                                            Home                Login                Register                My Profile                                                            Logout                                                                                          Welcome                  {{userName}}eep Private?                                                     Save Post                                                                                                                                                                                                                                                  {{pst.title}}                                                                                                                                                                                .example-header-image {                                    background-image: url({{pst.path}});                                    background-size: 100px 100px;                                  }                                                                                                  {{pst.title}}                                {{pst.timeStamp}}                                                             not working with dynammic address-->                                                                                                                                                                                                                                                                                                     Open Post                                Edit Post                                Delete Post                                                                                                                                                                                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n    \n        Description\n    \n    \n        Component handling registration of user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                credentials\n                            \n                            \n                                gen\n                            \n                            \n                                genders\n                            \n                            \n                                isSumbitted\n                            \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelect\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, registerService: RegisterService, router: Router, auth: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor to  initialize variables\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the form obejct used while logging in to create complex strucutre\n\n                                                        \n                                                \n                                                \n                                                        registerService\n                                                  \n                                                        \n                                                                    RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                indicates registration\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this helps in routing through different components\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                object used for authenticating user \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:66\n                \n            \n\n\n            \n                \n                    Function checks integrity of submission\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        event listener variable\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(registerData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:75\n                \n            \n\n\n            \n                \n                    Function to register data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    registerData\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains registration data by user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenPayload\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    uname: '',\n    pass: '',\n    phone: '',\n    gender: ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {value: 'female', viewValue: 'Female'},\n    {value: 'male', viewValue: 'Male'},\n    {value: 'other', viewValue: 'Other'}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSumbitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationForm\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { RegisterService } from '../register.service';\nimport { Router } from '@angular/router';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\n\n/**\n * Interface to manage gender of user\n */\nexport interface Gender {\n  value: string;\n  viewValue: string;\n}\n/**\n * Component handling registration of user\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n/**\n * Class to register new user\n */\nexport class RegisterComponent implements OnInit {\n  registrationForm;\n  isSumbitted: boolean;\n  gen: string;\n  credentials: TokenPayload = {\n    uname: '',\n    pass: '',\n    phone: '',\n    gender: ''\n  };\n  genders: Gender[] = [\n    {value: 'female', viewValue: 'Female'},\n    {value: 'male', viewValue: 'Male'},\n    {value: 'other', viewValue: 'Other'}\n  ];\n\n  /**\n * Constructor to  initialize variables\n * @param formBuilder the form obejct used while logging in to create complex strucutre\n * @param registerService indicates registration\n * @param router this helps in routing through different components\n * @param auth object used for authenticating user \n */\n  constructor(private formBuilder: FormBuilder, private registerService: RegisterService, private router: Router, private auth: AuthenticationService) {\n      this.registrationForm = this.formBuilder.group({\n        userId: '',\n        password: '',\n        confpassword: '',\n        phonenum: '',\n      });\n  }\n/**\n * @ignore\n */\n  ngOnInit() {\n    this.isSumbitted = false;\n  }\n/**\n * Function checks integrity of submission\n * @param event event listener variable\n */\n  onSelect(event){\n    if (this.isSumbitted === false) {\n      this.gen = event;\n    }\n  }\n/**\n * Function to register data\n * @param registerData Contains registration data by user\n */\n  onSubmit(registerData) {\n    // Process checkout data here\n\n    this.isSumbitted = true;\n    if (registerData.password === registerData.confpassword) {\n      console.log('Your order has been submitted', registerData);\n      console.log('Gender:', this.gen);\n      this.credentials = {\n        uname: registerData.userId,\n        pass: registerData.password,\n        phone: registerData.phonenum,\n        gender: this.gen\n      };\n      //this.registerService.addUser(registerData.userId, registerData.password, registerData.phonenum, this.gen).subscribe(() => {\n        //this.router.navigate(['/login']);\n\n      //});\n      this.auth.register(this.credentials).subscribe(() => {\n        this.router.navigate(['/login']);\n      }, (err) => {\n        console.error(err);\n      });\n    } else {\n      alert('Inconsistent passwords !!');\n    }\n  }\n}\n\n    \n\n    \n        \n        Register\n        \n        \n        \n        \n        \n      \n\n\n      \n\n        \n          \n            \n              My Diary\n            \n            \n              Home\n              Login\n              Register\n              My Profile\n            \n          \n        \n\n          \n\n\n          \n                \n                  Welcome\n                  Please Login to continue!\n                \n              \n\n              \n\n\n\n        \n\n                \n                        \n                          \n                          Register\n                          Enter Details\n                        \n                        \n                            \n\n                              \n\n                                \n\n                                  \n                                \n                              \n                              \n\n                                \n                                  \n                                \n\n                            \n                            \n                                \n                                    \n                                \n                            \n\n                            \n                              \n                                \n                            \n\n                            \n\n\n                            \n                                \n                                    Gender\n                                    \n                                        \n                                                {{gender.viewValue}}\n\n                                        \n                                    \n                                \n                            \n\n\n\n                              Register\n\n                            \n                          \n                        \n\n\n        \n\n\n          \n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .navbar-default {\n    background-color: rgb(0, 0, 0);\n    box-shadow: 0 0 5px red;\n   }\n  \n\n   .example-card {\n    max-width: 400px;\n  }\n  \n  .example-header-image {\n    background-image: url('../../assets/images/home/diary.png');\n    background-size: cover;\n  }\n\n\n   .login_container {\n    height: 50%;\n    width: 80%;\n    margin-left: 10%;\n    box-shadow: 0 0 20px rgb(137, 235, 248);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(35, 143, 114, 0.521);\n    border-radius: 20px;\n}\n\n\ninput[type=\"tel\"] {\n    border: 1px solid #ddd;\n    padding: 4px 8px;\n  }\n  input[type=\"tel\"]:focus {\n    border: 1px solid #000;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Register                                                                                                My Diary                                      Home              Login              Register              My Profile                                                                                    Welcome                  Please Login to continue!                                                                                                                                                Register                          Enter Detailsender                                                                                                                            {{gender.viewValue}}                                                                                                                                                                      Register                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface to pass user info\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        gender\n                                \n                                \n                                        pass\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                        uname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pass\n                                    \n                                \n                                \n                                    \n                                        pass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uname\n                                    \n                                \n                                \n                                    \n                                        uname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n/**\n * Interface carrying uer details\n */\nexport interface UserDetails {\n  _id: string;\n  uname: string;\n  pass?: string;\n  phone?: string;\n  gender?: string;\n  exp: number;\n  iat: number;\n}\n/**\n * Interface for JSON Web Token Response from backend\n */\ninterface TokenResponse {\n  token: string;\n}\n/**\n * Interface to pass user info\n */\nexport interface TokenPayload {\n  uname: string;\n  pass: string;\n  phone?: string;\n  gender?: string;\n}\n/**\n * Decorator that marks a class as available to be provided and injected as a dependency\n */\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service class that handles authentication of user, user registration and login\n */\nexport class AuthenticationService {\n  private token: string;\n  serverUri = 'http://localhost:3000';\n  /**\n   * Constructor to initialize variables\n   * @param http http address\n   * @param router Helps in moving from one webpage to another\n   */\n  constructor(private http: HttpClient, private router: Router) {}\n\n  /**\n   * Used for saving JSON web token\n   * @param token Saves JSON Web Token in local memory\n   */\n  private saveToken(token: string) {\n    localStorage.setItem('mean-token', token);\n    this.token = token;\n    console.log('Token: ' + localStorage.getItem('mean-token'));\n  }\n/**\n * Retrieves token from local memory\n */\n  private getToken() {\n    if (!this.token) {\n      this.token = localStorage.getItem('mean-token');\n    }\n    return this.token;\n  }\n/**\n * Fetches user details\n */\n  public getUserDetails(): UserDetails {\n    const token = this.getToken();\n    let payload;\n    if (token) {\n      payload = token.split('.')[1];\n      console.log('Token details: ' + payload);\n      payload = window.atob(payload);\n      console.log('Token details: ' + payload);\n      console.log('Token details: ' + payload);\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n/**\n * Checks if user is logged in\n */\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n/**\n * Used to send request to server\n * @param method post or get http method being used\n * @param type situation when it is used\n * @param user Token of user\n */\n  private request(method: 'post'|'get', type: 'login'|'user/add'|'profile', user?: TokenPayload): Observable {\n    let base;\n\n    if (method === 'post') {\n      base = this.http.post(`${this.serverUri}/${type}`, user);\n    } else {\n      base = this.http.get(`${this.serverUri}/${type}`, { headers: { Authorization: `Bearer ${this.getToken()}` }});\n    }\n    console.log(base);\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if (data.token) {\n          console.log('Data.Token:' + data.token);\n          this.saveToken(data.token);\n          let a = this.getUserDetails();\n        }\n        return data;\n      })\n    );\n\n    return request;\n  }\n/**\n * Used when new user registers\n * @param user Token of user\n */\n  public register(user: TokenPayload): Observable {\n    return this.request('post', 'user/add', user);\n  }\n/**\n * Used when user logs in\n * @param user Token of user\n */\n  public login(user: TokenPayload): Observable {\n    return this.request('post', 'login', user);\n  }\n/**\n * Fetches user profile\n */\n  public profile(): Observable {\n    return this.request('get', 'profile');\n  }\n/**\n * logs out user\n */\n  public logout(): void {\n    this.token = '';\n    window.localStorage.removeItem('mean-token');\n    this.router.navigateByUrl('/login');\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenResponse.html":{"url":"interfaces/TokenResponse.html","title":"interface - TokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for JSON Web Token Response from backend\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n/**\n * Interface carrying uer details\n */\nexport interface UserDetails {\n  _id: string;\n  uname: string;\n  pass?: string;\n  phone?: string;\n  gender?: string;\n  exp: number;\n  iat: number;\n}\n/**\n * Interface for JSON Web Token Response from backend\n */\ninterface TokenResponse {\n  token: string;\n}\n/**\n * Interface to pass user info\n */\nexport interface TokenPayload {\n  uname: string;\n  pass: string;\n  phone?: string;\n  gender?: string;\n}\n/**\n * Decorator that marks a class as available to be provided and injected as a dependency\n */\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service class that handles authentication of user, user registration and login\n */\nexport class AuthenticationService {\n  private token: string;\n  serverUri = 'http://localhost:3000';\n  /**\n   * Constructor to initialize variables\n   * @param http http address\n   * @param router Helps in moving from one webpage to another\n   */\n  constructor(private http: HttpClient, private router: Router) {}\n\n  /**\n   * Used for saving JSON web token\n   * @param token Saves JSON Web Token in local memory\n   */\n  private saveToken(token: string) {\n    localStorage.setItem('mean-token', token);\n    this.token = token;\n    console.log('Token: ' + localStorage.getItem('mean-token'));\n  }\n/**\n * Retrieves token from local memory\n */\n  private getToken() {\n    if (!this.token) {\n      this.token = localStorage.getItem('mean-token');\n    }\n    return this.token;\n  }\n/**\n * Fetches user details\n */\n  public getUserDetails(): UserDetails {\n    const token = this.getToken();\n    let payload;\n    if (token) {\n      payload = token.split('.')[1];\n      console.log('Token details: ' + payload);\n      payload = window.atob(payload);\n      console.log('Token details: ' + payload);\n      console.log('Token details: ' + payload);\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n/**\n * Checks if user is logged in\n */\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n/**\n * Used to send request to server\n * @param method post or get http method being used\n * @param type situation when it is used\n * @param user Token of user\n */\n  private request(method: 'post'|'get', type: 'login'|'user/add'|'profile', user?: TokenPayload): Observable {\n    let base;\n\n    if (method === 'post') {\n      base = this.http.post(`${this.serverUri}/${type}`, user);\n    } else {\n      base = this.http.get(`${this.serverUri}/${type}`, { headers: { Authorization: `Bearer ${this.getToken()}` }});\n    }\n    console.log(base);\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if (data.token) {\n          console.log('Data.Token:' + data.token);\n          this.saveToken(data.token);\n          let a = this.getUserDetails();\n        }\n        return data;\n      })\n    );\n\n    return request;\n  }\n/**\n * Used when new user registers\n * @param user Token of user\n */\n  public register(user: TokenPayload): Observable {\n    return this.request('post', 'user/add', user);\n  }\n/**\n * Used when user logs in\n * @param user Token of user\n */\n  public login(user: TokenPayload): Observable {\n    return this.request('post', 'login', user);\n  }\n/**\n * Fetches user profile\n */\n  public profile(): Observable {\n    return this.request('get', 'profile');\n  }\n/**\n * logs out user\n */\n  public logout(): void {\n    this.token = '';\n    window.localStorage.removeItem('mean-token');\n    this.router.navigateByUrl('/login');\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDetails.html":{"url":"interfaces/UserDetails.html","title":"interface - UserDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface carrying uer details\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        exp\n                                \n                                \n                                            Optional\n                                        gender\n                                \n                                \n                                        iat\n                                \n                                \n                                            Optional\n                                        pass\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                        uname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pass\n                                    \n                                \n                                \n                                    \n                                        pass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uname\n                                    \n                                \n                                \n                                    \n                                        uname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n/**\n * Interface carrying uer details\n */\nexport interface UserDetails {\n  _id: string;\n  uname: string;\n  pass?: string;\n  phone?: string;\n  gender?: string;\n  exp: number;\n  iat: number;\n}\n/**\n * Interface for JSON Web Token Response from backend\n */\ninterface TokenResponse {\n  token: string;\n}\n/**\n * Interface to pass user info\n */\nexport interface TokenPayload {\n  uname: string;\n  pass: string;\n  phone?: string;\n  gender?: string;\n}\n/**\n * Decorator that marks a class as available to be provided and injected as a dependency\n */\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service class that handles authentication of user, user registration and login\n */\nexport class AuthenticationService {\n  private token: string;\n  serverUri = 'http://localhost:3000';\n  /**\n   * Constructor to initialize variables\n   * @param http http address\n   * @param router Helps in moving from one webpage to another\n   */\n  constructor(private http: HttpClient, private router: Router) {}\n\n  /**\n   * Used for saving JSON web token\n   * @param token Saves JSON Web Token in local memory\n   */\n  private saveToken(token: string) {\n    localStorage.setItem('mean-token', token);\n    this.token = token;\n    console.log('Token: ' + localStorage.getItem('mean-token'));\n  }\n/**\n * Retrieves token from local memory\n */\n  private getToken() {\n    if (!this.token) {\n      this.token = localStorage.getItem('mean-token');\n    }\n    return this.token;\n  }\n/**\n * Fetches user details\n */\n  public getUserDetails(): UserDetails {\n    const token = this.getToken();\n    let payload;\n    if (token) {\n      payload = token.split('.')[1];\n      console.log('Token details: ' + payload);\n      payload = window.atob(payload);\n      console.log('Token details: ' + payload);\n      console.log('Token details: ' + payload);\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n/**\n * Checks if user is logged in\n */\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n/**\n * Used to send request to server\n * @param method post or get http method being used\n * @param type situation when it is used\n * @param user Token of user\n */\n  private request(method: 'post'|'get', type: 'login'|'user/add'|'profile', user?: TokenPayload): Observable {\n    let base;\n\n    if (method === 'post') {\n      base = this.http.post(`${this.serverUri}/${type}`, user);\n    } else {\n      base = this.http.get(`${this.serverUri}/${type}`, { headers: { Authorization: `Bearer ${this.getToken()}` }});\n    }\n    console.log(base);\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if (data.token) {\n          console.log('Data.Token:' + data.token);\n          this.saveToken(data.token);\n          let a = this.getUserDetails();\n        }\n        return data;\n      })\n    );\n\n    return request;\n  }\n/**\n * Used when new user registers\n * @param user Token of user\n */\n  public register(user: TokenPayload): Observable {\n    return this.request('post', 'user/add', user);\n  }\n/**\n * Used when user logs in\n * @param user Token of user\n */\n  public login(user: TokenPayload): Observable {\n    return this.request('post', 'login', user);\n  }\n/**\n * Fetches user profile\n */\n  public profile(): Observable {\n    return this.request('get', 'profile');\n  }\n/**\n * logs out user\n */\n  public logout(): void {\n    this.token = '';\n    window.localStorage.removeItem('mean-token');\n    this.router.navigateByUrl('/login');\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/authentication.service.ts\n            \n            interface\n            TokenPayload\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/authentication.service.ts\n            \n            interface\n            TokenResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/authentication.service.ts\n            \n            interface\n            UserDetails\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/diary.service.ts\n            \n            injectable\n            DiaryService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            class\n            searchResult\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/post/post.component.ts\n            \n            component\n            PostComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/post/post.component.ts\n            \n            class\n            jsonImage\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                56 %\n                (13/23)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            class\n            formDat\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            class\n            jsonResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            interface\n            Gender\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.11\n        \n            @angular/cdk : ~8.2.3\n        \n            @angular/common : ~8.2.11\n        \n            @angular/compiler : ~8.2.11\n        \n            @angular/core : ~8.2.11\n        \n            @angular/forms : ~8.2.11\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ~8.2.11\n        \n            @angular/platform-browser-dynamic : ~8.2.11\n        \n            @angular/router : ~8.2.11\n        \n            @ng-bootstrap/ng-bootstrap : ^5.1.2\n        \n            ckeditor4-angular : ^1.0.0-beta.2\n        \n            ng2-file-upload : ^1.4.0\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/formDat.html":{"url":"classes/formDat.html","title":"class - formDat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  formDat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/profile.component.ts\n        \n\n            \n                Description\n            \n            \n                Class which builds user profile \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                image\n                            \n                            \n                                isPrivate\n                            \n                            \n                                link\n                            \n                            \n                                post\n                            \n                            \n                                timestamp\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(i, a, b, c, d, e)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor to initilize user parameters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                contains user id\n\n                                                        \n                                                \n                                                \n                                                        a\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                contains title of post\n\n                                                        \n                                                \n                                                \n                                                        b\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                contains the actuals post\n\n                                                        \n                                                \n                                                \n                                                        c\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                contains time when post was created by user\n\n                                                        \n                                                \n                                                \n                                                        d\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                contains an image if user uploads one\n\n                                                        \n                                                \n                                                \n                                                        e\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                contains whether post is private\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPrivate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MatDividerModule} from '@angular/material/divider';\n\nimport {MatSnackBarModule} from '@angular/material';\nimport { MatSnackBar } from '@angular/material';\nimport { post } from 'selenium-webdriver/http';\nimport { AuthenticationService } from '../authentication.service';\nimport { DiaryService } from '../diary.service';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { CKEditor4 } from 'ckeditor4-angular/ckeditor';\n\n/**\n * Class which builds user profile \n */\nexport class formDat {\n  _id?;\n  title: string;\n  post: string;\n  timestamp: string;\n  image: string;\n  isPrivate: string; //CHANGED\n  // path;\n   link: string;\n   /**\n    * Constructor to initilize user parameters\n    * @param i contains user id\n    * @param a contains title of post\n    * @param b contains the actuals post\n    * @param c contains time when post was created by user\n    * @param d contains an image if user uploads one\n    * @param e contains whether post is private\n    */\n  constructor(i, a, b, c, d, e) { //CHANGED\n    this._id = i;\n    this.title = a;\n    this.post = b;\n    this.timestamp = c;\n    this.image = d;\n    this.isPrivate = e; //CHANGED\n    // this.path = path;\n    // this.link = '/post?imgpath=' + this.path + '&title=' + this.title + '&timeStamp=' + this.timeStamp + '&post=' + this.post;\n    \n  }\n}\n/**\n *JSON containing post and its ID \n */\nexport class jsonResponse {\n  post: string;\n  id: string;\n}\n/**\n * Component to handle user profile\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n/**\n * Class that handles all the functionalities of users profile\n */\nexport class ProfileComponent implements OnInit {\n\n    // userName = 'Demo User';\n\n\n    userName = '';\n    closeResult: string;\n    editorData;\n    postForm;\n    postList: Array = [];\n    avatarList: Array = [];\n    base64Image;\n    checked = false; //CHANGED \n    tit: string;\n    public model = {\n      editorData: 'Hello, world!'\n  };\n/**\n * Constructor for initializing parameters\n * @param snackBar displays a message that the post has been saved\n * @param datePipe connects dependency\n * @param formBuilder the form obejct used while logging in to create complex strucutre\n * @param authService this checks authentication of user information\n * @param diaryService service that handles posting and getting data\n * @param router this helps in routing through different components\n */\n    constructor(public snackBar: MatSnackBar, private datePipe: DatePipe,\n                private formBuilder: FormBuilder, private authService: AuthenticationService,\n                private diaryService: DiaryService, private router: Router) {\n\n      this.postForm = this.formBuilder.group({\n        title: '',\n        post: '',\n        avatarBase64: '',\n        avatar: ['']\n      });\n      this.verifyLoggedIn();\n      this.loadPostsData();\n    }\n/**\n * The function which verifies user credentials while logging in\n */\n    verifyLoggedIn() {\n      if (!this.authService.isLoggedIn()) {\n        this.router.navigate(['login']);\n      } else {\n        this.userName = this.authService.getUserDetails().uname;\n      }\n    }\n/**\n * This function loads posted data by user\n */\n    loadPostsData() {\n      this.diaryService.getPosts(this.userName).subscribe((res: Response) => {\n        // tslint:disable-next-line: no-unused-expression\n        console.log(res);\n        this.postList = res as unknown as formDat[];\n        // iterate and set link\n        for (var _i = 0; _i  {\n        console.error(err);\n      });\n    }\n    /**\n     * Acts on event image upload\n     * @param event image upload event\n     */\n    onFileChange(event) {\n      if (event.target.files.length > 0) {\n        const reader = new FileReader();\n\n        reader.readAsDataURL(event.target.files[0]); // read file as data url\n        console.log(reader);\n        reader.onloadend = () => { // called once readAsDataURL is completed\n        this.base64Image = reader.result.toString();\n        console.log(reader.result.toString().length);\n       };\n        const file = event.target.files[0];\n        console.log(file);\n        this.postForm.get('avatar').setValue(file);\n\n      }\n    }\n    /**\n     * Displays the message\n     * @param message message to be displayed\n     * @param action \n     */\n    openSnackBar(message: string, action: string) {\n      this.snackBar.open(message, action, {\n         duration: 2000,\n      });\n   }\n/**\n * Uploads post on submission\n * @param postData Contains data of post\n */\n    onSubmit(postData) {\n      // Process checkout data here\n      let thisId;\n      postData.post = this.editorData;\n      const medium = this.datePipe.transform(new Date(), 'MMM d, y, h:mm:ss a');\n      console.log(medium);\n      console.log(this.postList);\n      let id1;\n      this.diaryService.savePost(postData, this.userName, this.base64Image, medium, this.checked).subscribe((res: Response) => {\n        console.log('Subscribed');\n        console.log('Response');\n        console.log(res);\n        id1 = res as unknown as jsonResponse;\n        console.log(id1.id);\n        thisId = id1.id;\n      });\n      this.postList.push(new formDat(thisId, postData.title, postData.post, medium, this.base64Image, this.checked));   //CHANGED\n\n      \n\n      //console.log(this.base64Image);\n\n\n      // console.log('Your order has been submitted', postData);\n\n      // var fl = postData.avatar;\n      // var tmppath = \"./assets/images/tmp/\" + fl.name;  // Jst to check if working, image from database\n      // this.postList.push(new formDat(postData.title, postData.post, medium, tmppath));\n\n      this.openSnackBar(postData.title, 'Post Saved');\n    }\n    /**\n     *redirecting to another link\n     * @param img Image to be loaded\n     */\n    redir(img) {\n      window.location.href = '/post?img=' + img;\n      console.log('redirecting');\n      // location.replace(\"https://www.w3schools.com\")\n    }\n\n/**\n * Changes title of post\n * @param title Title of post \n * @param post Post of user\n */\n    editPost(title, post){\n      //alert(\"Edit Not Implemented Title: \"+title);\n      this.tit= title;\n      this.model.editorData = post;\n      this.diaryService.deletePost(this.userName, title).subscribe(() => {\n        var index = 0;\n        for (var i = 0; i  {\n        console.log('deleting');\n        //remove from arraylist too\n        var index = 0;\n        for (var i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyDiaryV1\nThis project was generated with Angular CLI version 8.3.12.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/jsonImage.html":{"url":"classes/jsonImage.html","title":"class - jsonImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  jsonImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post/post.component.ts\n        \n\n            \n                Description\n            \n            \n                exports JSON file containing image\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                image\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DiaryService } from '../diary.service';\n\n/**\n * exports JSON file containing image\n */\nexport class jsonImage {\n  _id?;\n  image: string;\n}\n/**\n * Component to handle user posts\n */\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\n\nexport class PostComponent implements OnInit {\n  id: string;\n  myurl:string;\n  uname: string;\n  imgpath:string;\n  title:string;\n  timeStamp:string;\n  post:string;\n  /**\n   * constructor to initialize variables\n   * @param diaryService Handles posting and retrieving information\n   * @param router Helps in connecting multiple webpages\n   */\n  constructor(private diaryService: DiaryService, private router: Router) { }\n/**\n * Function to fetch data from database for display purpose\n */\n  ngOnInit() {\n    this.myurl = window.location.href;\n    var url = new URL(this.myurl);\n    //this.imgpath = url.searchParams.get('imgpath');\n    this.id = url.searchParams.get('id');\n    this.title = url.searchParams.get('title');\n    this.timeStamp = url.searchParams.get('timeStamp');\n    this.post = url.searchParams.get('post');\n    this.uname = url.searchParams.get('uname');\n    console.log(this.id + ' ' + this.title + ' ' + this.timeStamp + ' ' + this.post);\n    this.diaryService.fetchImageBase64(this.uname, this.id).subscribe( (res: Response) => {\n      console.log(res);\n      var obj = res as unknown as jsonImage[];\n      console.log(obj);\n      this.imgpath = obj[0].image;\n    });\n    console.log(this.imgpath);\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/jsonResponse.html":{"url":"classes/jsonResponse.html","title":"class - jsonResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  jsonResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/profile.component.ts\n        \n\n            \n                Description\n            \n            \n                JSON containing post and its ID \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MatDividerModule} from '@angular/material/divider';\n\nimport {MatSnackBarModule} from '@angular/material';\nimport { MatSnackBar } from '@angular/material';\nimport { post } from 'selenium-webdriver/http';\nimport { AuthenticationService } from '../authentication.service';\nimport { DiaryService } from '../diary.service';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { CKEditor4 } from 'ckeditor4-angular/ckeditor';\n\n/**\n * Class which builds user profile \n */\nexport class formDat {\n  _id?;\n  title: string;\n  post: string;\n  timestamp: string;\n  image: string;\n  isPrivate: string; //CHANGED\n  // path;\n   link: string;\n   /**\n    * Constructor to initilize user parameters\n    * @param i contains user id\n    * @param a contains title of post\n    * @param b contains the actuals post\n    * @param c contains time when post was created by user\n    * @param d contains an image if user uploads one\n    * @param e contains whether post is private\n    */\n  constructor(i, a, b, c, d, e) { //CHANGED\n    this._id = i;\n    this.title = a;\n    this.post = b;\n    this.timestamp = c;\n    this.image = d;\n    this.isPrivate = e; //CHANGED\n    // this.path = path;\n    // this.link = '/post?imgpath=' + this.path + '&title=' + this.title + '&timeStamp=' + this.timeStamp + '&post=' + this.post;\n    \n  }\n}\n/**\n *JSON containing post and its ID \n */\nexport class jsonResponse {\n  post: string;\n  id: string;\n}\n/**\n * Component to handle user profile\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n/**\n * Class that handles all the functionalities of users profile\n */\nexport class ProfileComponent implements OnInit {\n\n    // userName = 'Demo User';\n\n\n    userName = '';\n    closeResult: string;\n    editorData;\n    postForm;\n    postList: Array = [];\n    avatarList: Array = [];\n    base64Image;\n    checked = false; //CHANGED \n    tit: string;\n    public model = {\n      editorData: 'Hello, world!'\n  };\n/**\n * Constructor for initializing parameters\n * @param snackBar displays a message that the post has been saved\n * @param datePipe connects dependency\n * @param formBuilder the form obejct used while logging in to create complex strucutre\n * @param authService this checks authentication of user information\n * @param diaryService service that handles posting and getting data\n * @param router this helps in routing through different components\n */\n    constructor(public snackBar: MatSnackBar, private datePipe: DatePipe,\n                private formBuilder: FormBuilder, private authService: AuthenticationService,\n                private diaryService: DiaryService, private router: Router) {\n\n      this.postForm = this.formBuilder.group({\n        title: '',\n        post: '',\n        avatarBase64: '',\n        avatar: ['']\n      });\n      this.verifyLoggedIn();\n      this.loadPostsData();\n    }\n/**\n * The function which verifies user credentials while logging in\n */\n    verifyLoggedIn() {\n      if (!this.authService.isLoggedIn()) {\n        this.router.navigate(['login']);\n      } else {\n        this.userName = this.authService.getUserDetails().uname;\n      }\n    }\n/**\n * This function loads posted data by user\n */\n    loadPostsData() {\n      this.diaryService.getPosts(this.userName).subscribe((res: Response) => {\n        // tslint:disable-next-line: no-unused-expression\n        console.log(res);\n        this.postList = res as unknown as formDat[];\n        // iterate and set link\n        for (var _i = 0; _i  {\n        console.error(err);\n      });\n    }\n    /**\n     * Acts on event image upload\n     * @param event image upload event\n     */\n    onFileChange(event) {\n      if (event.target.files.length > 0) {\n        const reader = new FileReader();\n\n        reader.readAsDataURL(event.target.files[0]); // read file as data url\n        console.log(reader);\n        reader.onloadend = () => { // called once readAsDataURL is completed\n        this.base64Image = reader.result.toString();\n        console.log(reader.result.toString().length);\n       };\n        const file = event.target.files[0];\n        console.log(file);\n        this.postForm.get('avatar').setValue(file);\n\n      }\n    }\n    /**\n     * Displays the message\n     * @param message message to be displayed\n     * @param action \n     */\n    openSnackBar(message: string, action: string) {\n      this.snackBar.open(message, action, {\n         duration: 2000,\n      });\n   }\n/**\n * Uploads post on submission\n * @param postData Contains data of post\n */\n    onSubmit(postData) {\n      // Process checkout data here\n      let thisId;\n      postData.post = this.editorData;\n      const medium = this.datePipe.transform(new Date(), 'MMM d, y, h:mm:ss a');\n      console.log(medium);\n      console.log(this.postList);\n      let id1;\n      this.diaryService.savePost(postData, this.userName, this.base64Image, medium, this.checked).subscribe((res: Response) => {\n        console.log('Subscribed');\n        console.log('Response');\n        console.log(res);\n        id1 = res as unknown as jsonResponse;\n        console.log(id1.id);\n        thisId = id1.id;\n      });\n      this.postList.push(new formDat(thisId, postData.title, postData.post, medium, this.base64Image, this.checked));   //CHANGED\n\n      \n\n      //console.log(this.base64Image);\n\n\n      // console.log('Your order has been submitted', postData);\n\n      // var fl = postData.avatar;\n      // var tmppath = \"./assets/images/tmp/\" + fl.name;  // Jst to check if working, image from database\n      // this.postList.push(new formDat(postData.title, postData.post, medium, tmppath));\n\n      this.openSnackBar(postData.title, 'Post Saved');\n    }\n    /**\n     *redirecting to another link\n     * @param img Image to be loaded\n     */\n    redir(img) {\n      window.location.href = '/post?img=' + img;\n      console.log('redirecting');\n      // location.replace(\"https://www.w3schools.com\")\n    }\n\n/**\n * Changes title of post\n * @param title Title of post \n * @param post Post of user\n */\n    editPost(title, post){\n      //alert(\"Edit Not Implemented Title: \"+title);\n      this.tit= title;\n      this.model.editorData = post;\n      this.diaryService.deletePost(this.userName, title).subscribe(() => {\n        var index = 0;\n        for (var i = 0; i  {\n        console.log('deleting');\n        //remove from arraylist too\n        var index = 0;\n        for (var i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPostComponent\n\nPostComponent\n\nAppModule -->\n\nPostComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nDiaryService\n\nDiaryService\n\nAppModule -->\n\nDiaryService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/searchResult.html":{"url":"classes/searchResult.html","title":"class - searchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  searchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/home.component.ts\n        \n\n            \n                Description\n            \n            \n                Class to store fetched data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                link\n                            \n                            \n                                post\n                            \n                            \n                                timestamp\n                            \n                            \n                                title\n                            \n                            \n                                uname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { QueryService } from '../query.service';\nimport { Router } from '@angular/router';\n\n/**\n * Class to store fetched data\n */\nexport class searchResult {\n  _id?;\n  uname: string;\n  title: string;\n  post: string;\n  link: string;\n  timestamp: string;\n}\n\n/**\n * Component to display searched query results\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n/**\n * Class handling searched queries\n */\nexport class HomeComponent implements OnInit {\n  searchText: string;\n  results: Array;\n  /**\n   * Constructor to initialize variables\n   * @param queryService service to manage query search from backend\n   * @param router helps in connecting multiple webpages\n   */\n  constructor(private queryService: QueryService, private router: Router) { }\n/**\n * Some function\n */\n  ngOnInit() {\n  }\n  /**\n   * Searches a database based on title in a query\n   */\n  searchTitle(){\n    //Search for this string\n    //alert(\"Search Title: \"+this.searchText);\n    this.queryService.query(this.searchText).subscribe((res: Response) => {\n      this.results = res as unknown as Array;\n      for (var _i = 0; _i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
